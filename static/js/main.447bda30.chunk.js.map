{"version":3,"sources":["controlers/services/queryRequest.ts","core/model/user.ts","core/workflow.service.ts","containers/containersCommonFile/containerIdentify.tsx","controlers/services/userRequest.ts","containers/containersCommonFile/containeEmployee.tsx","containers/containersVacation/containerInfoVacation.tsx","containers/containersVacation/containerVacation.tsx","containers/containersCommonFile/containerObservation.tsx","layoutPage/FormPageVacation.tsx","layoutPage/FormOwnSolicitation.tsx","layoutPage/FormEmployeeSolicitation.tsx","layoutPage/FormManagerSolicitation.tsx","layoutPage/PageLinks.tsx","controlers/routes/routes.tsx","App.tsx","index.tsx"],"names":["QueryRequest","typeReq","url","server","module","service","port","dataSource","debug","consult","type","this","WfUser","id","username","subject","email","fullname","locale","tenantName","tenantLocale","token","WorkflowService","workflow","errorFunction","submitFunction","workflowCockpit","init","_","onSubmit","processStep","onError","processError","fn","Error","Promise","all","requestPlatformData","requestProcessVariables","then","results","reduce","previousValue","currentValue","Object","assign","getPlatformData","platform","EMPTY_PLATFORM_DATA","getUserData","data","userData","indexOf","split","getInfoFromProcessVariables","wfVariables","parsePendencyData","bearer","TOKEN","sessionStorage","getItem","JSON","parse","pendencyData","attr","key","parseFloat","value","odataUrl","serviceUrl","undefined","DataUser","requestUserData","ContainerIdentify","own","useState","name","fields","Form","useForm","form","response","console","log","dataUserRequest","reqType","params","mountUrl","setService","setPort","setTypeReq","xhttp","XMLHttpRequest","param","open","createUrlRest","setRequestHeader","window","btoa","send","stringify","responseText","sendRequest","nome","cargo","setFieldsValue","registry","numcad","subsidiary","filial","office","boss","supime","labelCol","span","wrapperCol","labelAlign","onFieldsChange","allFields","gutter","Item","label","readOnly","hidden","Group","defaultValue","buttonStyle","onChange","who","target","submit","Button","style","marginLeft","ContainerEmployee","setFields","Option","Select","rules","required","message","title","allowClear","showSearch","placeholder","optionFilterProp","filterOption","input","option","children","toLowerCase","toLocaleLowerCase","ContainerInfoVacation","hasData","rowSelection","tableConfig","convertStringDate","dateString","strDate","dateStr","substring","Date","columns","dataIndex","render","dateNow","now","dateBegin","perAqIn","dateEnd","perAqEnd","part","dateRef","dateIn","setDate","getDate","EditOutlined","allfields","pagination","status","day","salary13","allowence","onRow","record","index","onClick","event","tableInfo","onRowSelection","ContainerVacation","props","fieldsForm","setFieldsForm","enaRow01","enaRow02","enaRow","setEnaRow","abono","setAbono","dayVacation","getFieldValue","textData","textDays","warningNote","description","notification","icon","WarningOutlined","color","background","duration","date","days","toLocaleDateString","datePgVacation","dayWeek","getDay","dataPgo","num","validationDayDate","chosenDate","data01","timeMin","_d","newDate","refDate","getFullYear","getMonth","newChosenDate","parseInt","validatorDate","dayweek","today","diff","Math","abs","getTime","ceil","validatorDays","diffDays","dayP1","dayP2","set","show01","show02","justify","width","validator","vacationDays","daysVacation01","third","dayvac","checked","placement","validDate","datEnd","datePgo","vacationDay","dateEndVacation01","datePgto01","resolve","reject","format","testDate","totalDays","length","datEndP1","daysVacation02","dateEndVacation02","dateBeginVacation02","datePgto02","daysVacation03","dateEndVacation03","dateBeginVacation03","datePgto03","dateBegin02","datePgo2","diasP2","datEndP2","daysVac03","dataInP3","datePgo3","datEndP3","min","max","ena","dateBeguinVacation03","daysVac02","marginTop","direction","size","display","ContainerObservation","usu","dateTime","role","setDataSource","count","setCount","onFinish","values","newObs","toString","toLocaleString","timeZone","prev","block","htmlType","TextArea","showCount","maxLength","FormPageVacation","showRow","setShowRow","employee","setEmployee","Provider","onFormFinish","forms","formVacation","element","document","querySelector","i","moment","classList","remove","FormOwnSolicitation","FormEmployeeSolicitation","FormManagerSolicitation","PageLinks","to","RoutePages","path","DataWorkflow","App","className","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.447bda30.chunk.js","sourcesContent":["export class QueryRequest {\r\n  private typeReq = 2;\r\n  private url = \"localhost:8080\";\r\n  private server = \"http://localhost:8080/\";\r\n  private module = \"rubi\";\r\n  private service = \"\";\r\n  private port = \"\";\r\n  private dataSource? = \"\";\r\n  private debug? = false;\r\n  private consult? = \"\";\r\n\r\n  public setTypeReq(type: number) {\r\n    this.typeReq = type;\r\n  }\r\n\r\n  public setUrl(url: string) {\r\n    this.url = url;\r\n  }\r\n\r\n  public setServer(server: string) {\r\n    this.server = server;\r\n  }\r\n\r\n  public setModule(module: string) {\r\n    this.module = module;\r\n  }\r\n\r\n  public setService(service: string) {\r\n    this.service = service;\r\n  }\r\n\r\n  public setPort(port: string) {\r\n    this.port = port;\r\n  }\r\n\r\n  public setDataSource(dataSource: string) {\r\n    this.dataSource = dataSource;\r\n  }\r\n\r\n  public setDebug(debug: boolean) {\r\n    this.debug = debug;\r\n  }\r\n\r\n  public setConsult(consult: string) {\r\n    this.consult = consult;\r\n  }\r\n\r\n  //1-Genérica 2-Não Genérica\r\n  public createUrlRest() {\r\n    if (this.typeReq === 1) {\r\n      return (\r\n        \"http://\" + this.url + \"/SXI/GenericConsult?consult=\" + this.consult\r\n      );\r\n    } else if (this.typeReq === 2 && this.dataSource && this.debug === true) {\r\n      return (\r\n        \"http://\" +\r\n        this.url +\r\n        \"/SXI/G5Rest?server=\" +\r\n        this.server +\r\n        \"&module=\" +\r\n        this.module +\r\n        \"&service=\" +\r\n        this.service +\r\n        \"&port=\" +\r\n        this.port +\r\n        \"&DATASOURCEATTRNAME=\" +\r\n        this.dataSource +\r\n        \"&DEBUG=true\"\r\n      );\r\n    } else if (this.typeReq === 2 && this.dataSource) {\r\n      return (\r\n        \"http://\" +\r\n        this.url +\r\n        \"/SXI/G5Rest?server=\" +\r\n        this.server +\r\n        \"&module=\" +\r\n        this.module +\r\n        \"&service=\" +\r\n        this.service +\r\n        \"&port=\" +\r\n        this.port +\r\n        \"&DATASOURCEATTRNAME=\" +\r\n        this.dataSource\r\n      );\r\n    } else\r\n      return (\r\n        \"http://\" +\r\n        this.url +\r\n        \"/SXI/G5Rest?server=\" +\r\n        this.server +\r\n        \"&module=\" +\r\n        this.module +\r\n        \"&service=\" +\r\n        this.service +\r\n        \"&port=\" +\r\n        this.port\r\n      );\r\n  }\r\n}\r\n","import { WfUserData } from \"@seniorsistemas/workflow-cockpit\";\r\n\r\nexport class WfUser implements WfUserData {\r\n  id = \"\";\r\n  username = \"\";\r\n  subject = \"\";\r\n  email = \"\";\r\n  fullname = \"\";\r\n  locale = \"\";\r\n  tenantName = \"\";\r\n  tenantLocale = \"\";\r\n  token = \"\";\r\n}\r\n","import {\r\n  WfFormData,\r\n  WfPlatformData,\r\n  WfProcessError,\r\n  WfProcessStep,\r\n  WfVariable,\r\n  WorkflowCockpit,\r\n  workflowCockpit,\r\n} from \"@seniorsistemas/workflow-cockpit\";\r\nimport { WfUser } from \"./model/user\";\r\n\r\ntype ErrorFunction = (\r\n  proccessStep: WfProcessError,\r\n  workflow: WorkflowCockpit\r\n) => void;\r\n\r\ntype SubmitFunction = (\r\n  proccessStep: WfProcessStep,\r\n  workflow: WorkflowCockpit\r\n) => WfFormData;\r\n\r\ninterface ProccessVariables {\r\n  [key: string]: string;\r\n}\r\n\r\nexport class WorkflowService {\r\n  private static readonly EMPTY_PLATFORM_DATA: WfPlatformData = {\r\n    odataUrl: \"\",\r\n    serviceUrl: \"\",\r\n    token: undefined,\r\n  };\r\n\r\n  private workflow: WorkflowCockpit;\r\n  private errorFunction: ErrorFunction;\r\n  private submitFunction: SubmitFunction;\r\n\r\n  constructor() {\r\n    this.workflow = workflowCockpit({\r\n      init: (_, workflow) => {\r\n        this.workflow = workflow;\r\n      },\r\n      onSubmit: (processStep, workflow) => {\r\n        this.workflow = workflow;\r\n        if (this.submitFunction) {\r\n          return this.submitFunction(processStep, workflow);\r\n        }\r\n        return {};\r\n      },\r\n      onError: (processError, workflow) => {\r\n        this.workflow = workflow;\r\n        if (this.errorFunction) {\r\n          this.errorFunction(processError, workflow);\r\n        }\r\n      },\r\n    });\r\n  }\r\n\r\n  public onError(fn: ErrorFunction): void {\r\n    this.errorFunction = fn;\r\n  }\r\n\r\n  public onSubmit(fn: SubmitFunction): void {\r\n    this.submitFunction = fn;\r\n  }\r\n\r\n  /**\r\n   * @description aborta a ação de submit. Este método pode ser utilizado para cancelar a ação de subimit\r\n   * caso o formulário seja inválido.\r\n   */\r\n  public abortSubmit(): void {\r\n    throw new Error(\"Ação cancelada.\");\r\n  }\r\n\r\n  public requestPlatformDataAndVariables(): Promise<\r\n    WfPlatformData & ProccessVariables\r\n  > {\r\n    return Promise.all([\r\n      this.requestPlatformData(),\r\n      this.requestProcessVariables(),\r\n    ]).then((results) => {\r\n      const allPromiseResults = results.reduce(\r\n        (previousValue, currentValue) =>\r\n          Object.assign(previousValue, currentValue),\r\n        {}\r\n      );\r\n      return allPromiseResults as WfPlatformData & ProccessVariables;\r\n    });\r\n  }\r\n\r\n  public requestPlatformData(): Promise<WfPlatformData> {\r\n    return this.workflow\r\n      .getPlatformData()\r\n      .then((platform) => platform || WorkflowService.EMPTY_PLATFORM_DATA);\r\n  }\r\n\r\n  public requestUserData(): Promise<WfUser> {\r\n    return this.workflow.getUserData().then((data) => {\r\n      if (data) {\r\n        const userData: WfUser = Object.assign(new WfUser(), data);\r\n\r\n        if (userData.username.indexOf(\"@\") >= 0) {\r\n          userData.username = userData.username.split(\"@\")[0];\r\n        }\r\n\r\n        return userData;\r\n      } else {\r\n        return new WfUser();\r\n      }\r\n    });\r\n  }\r\n\r\n  public requestProcessVariables(): Promise<ProccessVariables> {\r\n    return this.workflow.getInfoFromProcessVariables().then((wfVariables) => {\r\n      if (wfVariables) {\r\n        return this.parsePendencyData(wfVariables);\r\n      } else {\r\n        return {};\r\n      }\r\n    });\r\n  }\r\n\r\n  public getToken(bearer = true): string {\r\n    const TOKEN = sessionStorage.getItem(\"senior-token\");\r\n    return bearer ? `Bearer ${TOKEN}` : TOKEN;\r\n  }\r\n\r\n  public getUser(): WfUser {\r\n    return JSON.parse(sessionStorage.getItem(\"userData\")) as WfUser;\r\n  }\r\n\r\n  private parsePendencyData(pendencyData: WfVariable[]): ProccessVariables {\r\n    const data = {};\r\n    for (const pendency of pendencyData) {\r\n      const attr = pendency;\r\n      if (\r\n        attr.type === \"Integer\" ||\r\n        attr.type === \"Double\" ||\r\n        attr.type === \"Float\"\r\n      ) {\r\n        data[attr.key] = parseFloat(attr.value);\r\n      } else {\r\n        data[attr.key] = attr.value;\r\n      }\r\n    }\r\n    return data;\r\n  }\r\n}\r\n","import { Input, Form, Row, Col, Radio } from \"antd\";\r\nimport \"./container.css\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { FieldData } from \"./containerInterface\";\r\nimport { sendRequest } from \"../../controlers/services/userRequest\";\r\nimport { WorkflowService } from \"../../core/workflow.service\";\r\n\r\nconst DataWorkflow = new WorkflowService();\r\n\r\nconst DataUser = DataWorkflow.requestUserData();\r\n\r\nexport default function ContainerIdentify(own) {\r\n  const [fields, setFields] = useState<FieldData[]>([\r\n    { name: \"fullname\", value: \"\" },\r\n    { name: \"registry\", value: \"\" },\r\n    { name: \"subsidiary\", value: \"\" },\r\n    { name: \"office\", value: \"\" },\r\n    { name: \"boss\", value: \"\" },\r\n    { name: \"who\", value: \"\" },\r\n  ]);\r\n\r\n  const [form] = Form.useForm();\r\n\r\n  DataUser.then((response) => {\r\n    let nome = response.fullname;\r\n    console.log(response);\r\n    //console.log(typeof nome);\r\n\r\n    const paramName = {\r\n      nome: response.fullname,\r\n      email: response.email,\r\n    };\r\n\r\n    const dataUserRequest = sendRequest(\r\n      \"POST\",\r\n      \"br.com.cvc.wf.geral\",\r\n      \"GetDadosSolicitante\",\r\n      paramName\r\n    );\r\n\r\n    console.log(dataUserRequest);\r\n    console.log(dataUserRequest.cargo);\r\n\r\n    form.setFieldsValue({\r\n      fullname: dataUserRequest.nome,\r\n      registry: dataUserRequest.numcad,\r\n      subsidiary: dataUserRequest.filial,\r\n      office: dataUserRequest.cargo,\r\n      boss: dataUserRequest.supime,\r\n    });\r\n  });\r\n\r\n  const onChangeRadio = (value) => {\r\n    //console.log(value.target.value);\r\n    form.setFieldsValue({ who: value.target.value });\r\n    form.submit();\r\n  };\r\n  return (\r\n    <>\r\n      <fieldset>\r\n        <legend>Identificação do Solicitante</legend>\r\n        <Form\r\n          name=\"formIdentify\"\r\n          labelCol={{ span: 10 }}\r\n          wrapperCol={{ span: 12 }}\r\n          labelAlign=\"left\"\r\n          fields={fields}\r\n          form={form}\r\n          onFieldsChange={(_, allFields) => {}}\r\n        >\r\n          <Row gutter={50}>\r\n            <Col span={12}>\r\n              <Form.Item name={\"fullname\"} label={\"Nome Solicitante\"}>\r\n                <Input />\r\n              </Form.Item>\r\n            </Col>\r\n            <Col span={12}>\r\n              <Form.Item name={\"registry\"} label={\"Matrícula\"}>\r\n                <Input readOnly />\r\n              </Form.Item>\r\n            </Col>\r\n          </Row>\r\n          <Row gutter={50}>\r\n            <Col span={12}>\r\n              <Form.Item name={\"office\"} label={\"Cargo Solicitante\"}>\r\n                <Input readOnly />\r\n              </Form.Item>\r\n            </Col>\r\n            <Col span={12}>\r\n              <Form.Item name={\"subsidiary\"} label={\"Filial\"}>\r\n                <Input readOnly />\r\n              </Form.Item>\r\n            </Col>\r\n          </Row>\r\n          <Row gutter={50}>\r\n            <Col span={12}>\r\n              <Form.Item name={\"boss\"} label={\"Superior Imediato\"}>\r\n                <Input readOnly />\r\n              </Form.Item>\r\n            </Col>\r\n            <Col span={12}>\r\n              <span hidden={own.own}>\r\n                <Form.Item\r\n                  name={\"who\"}\r\n                  label={\"Solicitação de Férias\"}\r\n                  labelAlign=\"left\"\r\n                >\r\n                  <Radio.Group\r\n                    defaultValue=\"ownVacation\"\r\n                    buttonStyle=\"solid\"\r\n                    onChange={onChangeRadio}\r\n                  >\r\n                    <Radio.Button value={\"ownVacation\"}>Própria</Radio.Button>\r\n                    <Radio.Button\r\n                      value={\"employeeVacation\"}\r\n                      style={{ marginLeft: \"20px\" }}\r\n                    >\r\n                      Colaborador\r\n                    </Radio.Button>\r\n                  </Radio.Group>\r\n                </Form.Item>\r\n              </span>\r\n            </Col>\r\n          </Row>\r\n        </Form>\r\n      </fieldset>\r\n    </>\r\n  );\r\n}\r\n","import { QueryRequest } from \"./queryRequest\";\r\n\r\nexport function sendRequest_old() {\r\n  const mountUrl: QueryRequest = new QueryRequest();\r\n\r\n  mountUrl.setConsult(\"consulta_solicitante_CVC\");\r\n  mountUrl.setUrl(\"localhost:8080\");\r\n  mountUrl.setTypeReq(1);\r\n\r\n  const xhttp = new XMLHttpRequest();\r\n\r\n  xhttp.open(\"GET\", mountUrl.createUrlRest(), false);\r\n  xhttp.send();\r\n  let responseArray = JSON.parse(xhttp.responseText);\r\n  //console.log(responseArray[3]);\r\n  return responseArray[1];\r\n}\r\n\r\nexport function sendRequest(reqType, service, port, params?) {\r\n  const mountUrl: QueryRequest = new QueryRequest();\r\n\r\n  const username = \"senior\";\r\n  const password = \"senior\";\r\n\r\n  mountUrl.setService(service);\r\n  mountUrl.setPort(port);\r\n  mountUrl.setTypeReq(2);\r\n\r\n  const xhttp = new XMLHttpRequest();\r\n  const param = params;\r\n\r\n  xhttp.open(reqType, mountUrl.createUrlRest(), false);\r\n  xhttp.setRequestHeader(\r\n    \"Authorization\",\r\n    \"Basic \" + window.btoa(username + \":\" + password)\r\n  );\r\n  xhttp.setRequestHeader(\"Accept\", \"application/json;charset=utf-8\");\r\n  xhttp.setRequestHeader(\"user\", \"senior\");\r\n\r\n  xhttp.send(JSON.stringify(param));\r\n  let responseArray = JSON.parse(xhttp.responseText);\r\n\r\n  //console.log(responseArray);\r\n  return responseArray;\r\n}\r\n\r\nexport function requestCauseDismissal() {\r\n  const mountUrl: QueryRequest = new QueryRequest();\r\n  mountUrl.setConsult(\"causa_demissao\");\r\n  mountUrl.setUrl(\"localhost:8080\");\r\n  mountUrl.setTypeReq(1);\r\n\r\n  const xhttp = new XMLHttpRequest();\r\n  xhttp.open(\"GET\", mountUrl.createUrlRest(), false);\r\n  xhttp.send();\r\n  let responseArray = JSON.parse(xhttp.responseText);\r\n  //console.log(responseArray);\r\n  return responseArray;\r\n}\r\n\r\nexport function sendRequestWeb() {\r\n  const mountUrl: QueryRequest = new QueryRequest();\r\n  const url =\r\n    \"http://localhost:8080/SXI/G5Rest?server=http://localhost:8080&module=rubi&service=br.com.cvc.wf.rescisao&port=GetCausaRecisao&DATASOURCEATTRNAME=CausaDemissao&DEBUG=true\";\r\n\r\n  const username = \"senior\";\r\n  const password = \"senior\";\r\n\r\n  mountUrl.setUrl(\"localhost:8080\");\r\n  mountUrl.setServer(\"http://localhost:8080/\");\r\n  mountUrl.setModule(\"rubi\");\r\n  mountUrl.setService(\"Altera.Feriado\");\r\n  mountUrl.setPort(\"TesteWeb\");\r\n\r\n  const xhttp = new XMLHttpRequest();\r\n  const param = {\r\n    tipoMens: \"Dia\",\r\n  };\r\n\r\n  xhttp.open(\"POST\", url, false);\r\n  xhttp.setRequestHeader(\r\n    \"Authorization\",\r\n    \"Basic \" + window.btoa(username + \":\" + password)\r\n  );\r\n  xhttp.setRequestHeader(\"Accept\", \"application/json;charset=utf-8\");\r\n  xhttp.setRequestHeader(\"user\", \"senior\");\r\n\r\n  xhttp.send(JSON.stringify(param));\r\n  let responseArray = JSON.parse(xhttp.responseText);\r\n\r\n  //console.log(responseArray);\r\n  return responseArray.causaDemissao;\r\n}\r\n\r\nexport function SendRequestWebService(reqType, service, port, params?) {\r\n  /* const url = \"http://localhost:8080/SXI/GenericConsult?consult=causa_demissao\";\r\n  const url2 =\r\n    \"http://localhost:8080/SXI/G5Rest?server=http://localhost:8080&module=rubi&service=br.com.cvc.wf.rescisao&port=GetCausaRecisao&DATASOURCEATTRNAME=CausaDemissao&DEBUG=true\";\r\n\r\n  const url3 =\r\n    \"http://localhost:8080/SXI/G5Rest?server=http://localhost:8080/&module=rubi&service=Altera.Feriado&port=TesteWeb\";\r\n */\r\n\r\n  const mountUrl: QueryRequest = new QueryRequest();\r\n  const username = \"senior\";\r\n  const password = \"senior\";\r\n\r\n  mountUrl.setService(service);\r\n  mountUrl.setPort(port);\r\n  mountUrl.setTypeReq(2);\r\n\r\n  let headers = new Headers();\r\n\r\n  headers.append(\"Accept\", \"application/json;charset=utf-8\");\r\n  headers.append(\r\n    \"Authorization\",\r\n    \"Basic \" + window.btoa(username + \":\" + password)\r\n  );\r\n  headers.append(\"user\", \"senior\");\r\n\r\n  let response = fetch(mountUrl.createUrlRest(), {\r\n    mode: \"cors\",\r\n    method: \"post\",\r\n    headers: headers,\r\n    body: JSON.stringify(params),\r\n  }).then((resp) => {\r\n    let promise = new Promise((res, rej) => {\r\n      let option = resp.json().then((jso) => {\r\n        return jso;\r\n      });\r\n      if (resp.status === 200) {\r\n        res(option);\r\n      } else {\r\n        rej(\"erro\");\r\n      }\r\n    });\r\n    /* Retorna o valor dentro da [PromiseResult] */\r\n    return promise;\r\n  });\r\n\r\n  //console.log(response);\r\n  return response;\r\n}\r\n","import { Input, Form, Row, Col, Select, Tooltip } from \"antd\";\r\nimport \"./container.css\";\r\nimport { useState } from \"react\";\r\nimport { FieldData } from \"./containerInterface\";\r\n\r\nexport default function ContainerEmployee() {\r\n  const [fields, setFields] = useState<FieldData[]>([\r\n    { name: [\"registryEmployee\"], value: \"\" },\r\n    { name: [\"positionemployee\"], value: \"\" },\r\n    { name: [\"subsidiaryEmployee\"], value: \"\" },\r\n    { name: [\"bossEmployee\"], value: \"\" },\r\n    { name: [\"custCenter\"], value: \"\" },\r\n  ]);\r\n\r\n  const { Option } = Select;\r\n\r\n  return (\r\n    <>\r\n      <fieldset>\r\n        <legend>Informações do Colaborador</legend>\r\n        <Form\r\n          name=\"formEmployee\"\r\n          labelCol={{ span: 10 }}\r\n          wrapperCol={{ span: 12 }}\r\n          labelAlign=\"left\"\r\n          fields={fields}\r\n          onFieldsChange={(_, allFields) => {\r\n            setFields(allFields);\r\n          }}\r\n        >\r\n          <Row gutter={20}>\r\n            <Col span={12}>\r\n              <Form.Item\r\n                name={[\"nameEmployee\"]}\r\n                label={\"Colaborador\"}\r\n                rules={[\r\n                  { required: true },\r\n                  { message: \"Obrigatório selecionar o colaborador.\" },\r\n                ]}\r\n              >\r\n                <Tooltip title=\"Selecione o nome do colaborador\">\r\n                  <Select\r\n                    allowClear\r\n                    showSearch\r\n                    placeholder=\"Selecione Colaborador\"\r\n                    optionFilterProp=\"children\"\r\n                    filterOption={(input, option) =>\r\n                      option?.children\r\n                        .toLowerCase()\r\n                        .indexOf(input.toLocaleLowerCase()) >= 0\r\n                    }\r\n                  >\r\n                    <Option value=\"Adriana Conceição\">Adriana Conceição</Option>\r\n                    <Option value=\"Roberto Mattos\">Roberto Mattos</Option>\r\n                    <Option value=\"Maria Eduarda Freitas\">\r\n                      Maria Eduarda Freitas\r\n                    </Option>\r\n                    <Option value=\"Tadeu Carvalho\">Tadeu Carvalho</Option>\r\n                  </Select>\r\n                </Tooltip>\r\n              </Form.Item>\r\n            </Col>\r\n            <Col span={12}>\r\n              <Form.Item name={[\"registryEmployee\"]} label={\"Matrícula\"}>\r\n                <Input readOnly />\r\n              </Form.Item>\r\n            </Col>\r\n          </Row>\r\n          <Row gutter={20}>\r\n            <Col span={12}>\r\n              <Form.Item\r\n                name={[\"positionemployee\"]}\r\n                label={\"Cargo Colaborador\"}\r\n              >\r\n                <Input readOnly />\r\n              </Form.Item>\r\n            </Col>\r\n            <Col span={12}>\r\n              <Form.Item name={[\"subsidiaryEmployee\"]} label={\"Filial\"}>\r\n                <Input readOnly />\r\n              </Form.Item>\r\n            </Col>\r\n          </Row>\r\n          <Row gutter={20}>\r\n            <Col span={12}>\r\n              <Form.Item name={[\"bossEmployee\"]} label={\"Superior Imediato\"}>\r\n                <Input readOnly />\r\n              </Form.Item>\r\n            </Col>\r\n            <Col span={12}>\r\n              <Form.Item></Form.Item>\r\n            </Col>\r\n          </Row>\r\n        </Form>\r\n      </fieldset>\r\n    </>\r\n  );\r\n}\r\n","import { Form, Table } from \"antd\";\r\nimport { EditOutlined } from \"@ant-design/icons\";\r\nimport \"../containersCommonFile/container.css\";\r\nimport { useState } from \"react\";\r\nimport { FieldData } from \"../containersCommonFile/containerInterface\";\r\n\r\nexport default function ContainerInfoVacation() {\r\n  const [fields, setFields] = useState<FieldData[]>([\r\n    { name: \"who\", value: \"\" },\r\n    { name: \"tableInfo\", value: {} },\r\n  ]);\r\n\r\n  interface iTable {\r\n    rowSelection?: {} | undefined;\r\n    scroll?: {} | undefined;\r\n    hasData?: boolean;\r\n    pagination?: {} | any;\r\n  }\r\n\r\n  const [tableConfig, setTableConfig] = useState<iTable>({\r\n    hasData: true,\r\n    rowSelection: undefined,\r\n  });\r\n\r\n  const convertStringDate = (dateString) => {\r\n    const strDate = dateString;\r\n    const dateStr =\r\n      strDate.substring(6, 10) +\r\n      \",\" +\r\n      strDate.substring(3, 5) +\r\n      \",\" +\r\n      strDate.substring(0, 2);\r\n    const dateRef = new Date(dateStr);\r\n    //console.log(dateStr);\r\n    //console.log(dateRef);\r\n\r\n    return dateRef;\r\n  };\r\n\r\n  const data = [\r\n    {\r\n      key: 1,\r\n      status: \"Definido\",\r\n      perAqIn: \"01/04/2022\",\r\n      perAqEnd: \"30/04/2022\",\r\n      dateIn: \"\",\r\n      dateEnd: \"\",\r\n      day: \"30\",\r\n      salary13: \"\",\r\n      allowence: \"\",\r\n      part: \"3\",\r\n      children: [\r\n        {\r\n          key: 11,\r\n          part: \"1\",\r\n          dateIn: \"04/07/2022\",\r\n          dateEnd: \"19/07/2022\",\r\n          salary13: \"Sim\",\r\n          allowence: \"\",\r\n          day: \"15\",\r\n        },\r\n        {\r\n          key: 12,\r\n          part: \"2\",\r\n          dateIn: \"01/08/2022\",\r\n          dateEnd: \"11/08/2022\",\r\n          day: \"10\",\r\n        },\r\n        {\r\n          key: 13,\r\n          part: \"3\",\r\n          dateIn: \"06/09/2022\",\r\n          dateEnd: \"11/09/2022\",\r\n          salary13: \"\",\r\n          allowence: \"Sim\",\r\n          day: \"5\",\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      key: 1,\r\n      status: \"Aberto\",\r\n      perAqIn: \"01/04/2022\",\r\n      perAqEnd: \"30/04/2022\",\r\n      dateIn: \"\",\r\n      dateEnd: \"\",\r\n      day: \"30\",\r\n      salary13: \"\",\r\n      allowence: \"\",\r\n      part: \"\",\r\n    },\r\n  ];\r\n\r\n  const columns = [\r\n    {\r\n      title: \"Situação\",\r\n      dataIndex: \"status\",\r\n      key: \"key\",\r\n    },\r\n    {\r\n      title: \"Período Aquisitivo Inicial\",\r\n      dataIndex: \"perAqIn\",\r\n      key: \"key\",\r\n    },\r\n    {\r\n      title: \"Período Aquisitivo Final\",\r\n      dataIndex: \"perAqEnd\",\r\n      key: \"key\",\r\n    },\r\n    {\r\n      title: \"Data Inicio\",\r\n      dataIndex: \"dateIn\",\r\n      key: \"key\",\r\n    },\r\n    {\r\n      title: \"Data Fim\",\r\n      dataIndex: \"dateEnd\",\r\n      key: \"key\",\r\n    },\r\n    {\r\n      title: \"Dias\",\r\n      dataIndex: \"day\",\r\n      key: \"key\",\r\n    },\r\n    {\r\n      title: \"13° Salário\",\r\n      dataIndex: \"salary13\",\r\n      key: \"key\",\r\n    },\r\n    {\r\n      title: \"Abono\",\r\n      dataIndex: \"allowence\",\r\n      key: \"key\",\r\n    },\r\n\r\n    {\r\n      title: \"Parcelas\",\r\n      dataIndex: \"part\",\r\n      key: \"key\",\r\n    },\r\n    {\r\n      title: \"Ação\",\r\n      key: \"action\",\r\n      render: (name) => {\r\n        const dateNow = new Date(Date.now());\r\n        const dateBegin = convertStringDate(name.perAqIn);\r\n        const dateEnd = convertStringDate(name.perAqEnd);\r\n        //console.log(dateNow > dateBegin && dateNow < dateEnd);\r\n        //console.log(dateBegin);\r\n        //console.log(dateEnd);\r\n        //console.log(name.part > 1);\r\n\r\n        if (dateNow > dateBegin && dateNow < dateEnd) {\r\n          if (name.part > 1) {\r\n            let dateRef = convertStringDate(name.children[0].dateIn);\r\n\r\n            dateRef.setDate(dateRef.getDate() - 60);\r\n            //console.log(name.children[0].dateIn);\r\n            if (dateNow < dateRef) {\r\n              return (\r\n                <a>\r\n                  <EditOutlined />\r\n                </a>\r\n              );\r\n            } else {\r\n              return <a></a>;\r\n            }\r\n          } else if (name.part === 1) {\r\n            //console.log(\"teste\");\r\n            let dateRef = convertStringDate(name.dateIn);\r\n            dateRef.setDate(dateRef.getDate() - 60);\r\n            if (dateNow < dateRef) {\r\n              return (\r\n                <a>\r\n                  <EditOutlined />\r\n                </a>\r\n              );\r\n            } else {\r\n              return;\r\n              <a></a>;\r\n            }\r\n          } else {\r\n            return (\r\n              <a>\r\n                <EditOutlined />\r\n              </a>\r\n            );\r\n          }\r\n        }\r\n      },\r\n    },\r\n  ];\r\n\r\n  const [form] = Form.useForm();\r\n\r\n  const onRowSelection = (record, index) => {\r\n    //console.log(index);\r\n    //console.log(record);\r\n    //console.log(record.part);\r\n    form.setFieldsValue({ tableInfo: record });\r\n    form.submit();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <fieldset>\r\n        <legend>Informações de Férias</legend>\r\n        <Form\r\n          name=\"formInfoVacation\"\r\n          labelAlign=\"left\"\r\n          form={form}\r\n          onFieldsChange={(_, allfields) => {\r\n            setFields(allfields);\r\n            //console.log(allfields);\r\n          }}\r\n        >\r\n          <Form.Item name={\"tableInfo\"}></Form.Item>\r\n\r\n          <Table\r\n            {...tableConfig}\r\n            pagination={false}\r\n            dataSource={data}\r\n            columns={columns}\r\n            onRow={(record, index) => {\r\n              return {\r\n                onClick: (event) => onRowSelection(record, index),\r\n              };\r\n            }}\r\n          />\r\n        </Form>\r\n      </fieldset>\r\n    </>\r\n  );\r\n}\r\n","import {\r\n  Input,\r\n  InputNumber,\r\n  Form,\r\n  Row,\r\n  Col,\r\n  Tooltip,\r\n  DatePicker,\r\n  notification,\r\n  Radio,\r\n  Space,\r\n  Checkbox,\r\n} from \"antd\";\r\nimport { useState, useEffect } from \"react\";\r\nimport \"../containersCommonFile/container.css\";\r\nimport { FieldData } from \"../containersCommonFile/containerInterface\";\r\nimport { WarningOutlined } from \"@ant-design/icons\";\r\nimport { sendRequest } from \"../../controlers/services/userRequest\";\r\n\r\n//let upVacation = 30;\r\n\r\nexport default function ContainerVacation(props: any) {\r\n  const [fieldsForm, setFieldsForm] = useState<FieldData[]>([\r\n    { name: \"periodEnd\", value: \"\" },\r\n    { name: \"unexcused\", value: \"\" },\r\n    { name: \"vacationDays\", value: \"\" },\r\n    { name: \"dateBeginVacation01\", value: \"\" },\r\n    { name: \"daysVacation01\", value: \"\" },\r\n    { name: \"dateEndVacation01\", value: \"\" },\r\n    { name: \"datePgto01\", value: \"\" },\r\n    { name: \"dateBeginVacation02\", value: \"\" },\r\n    { name: \"daysVacation02\", value: \"\" },\r\n    { name: \"dateEndVacation02\", value: \"\" },\r\n    { name: \"datePgto02\", value: \"\" },\r\n    { name: \"dateBeginVacation03\", value: \"\" },\r\n    { name: \"daysVacation03\", value: \"\" },\r\n    { name: \"dateEndVacation03\", value: \"\" },\r\n    { name: \"datePgto03\", value: \"\" },\r\n    { name: \"abonoPec\", value: \"\" },\r\n    { name: \"dtsal\", value: \"\" },\r\n  ]);\r\n\r\n  const [enaRow, setEnaRow] = useState({\r\n    enaRow01: true,\r\n    enaRow02: true,\r\n  });\r\n\r\n  const [abono, setAbono] = useState(false);\r\n\r\n  const [form] = Form.useForm();\r\n  const dayVacation = form.getFieldValue(\"vacationDays\");\r\n\r\n  const textData =\r\n    \"Informar a data de início das férias. Somente será permitido data de inicio após 60 dias da data de requisição. \";\r\n  const textDays =\r\n    \"Se parcelado, o número de dias não poderá ser menor que 5 e uma das parcelas deve ser de 14 dias\";\r\n\r\n  const warningNote = (description) => {\r\n    notification.open({\r\n      message: \"Atenção Erro no preenchimento\",\r\n      description: description,\r\n      icon: <WarningOutlined style={{ color: \"#FF0000\" }} />,\r\n      style: {\r\n        background: \"#bfcff7\",\r\n      },\r\n      duration: 5,\r\n    });\r\n  };\r\n\r\n  const dateEnd = (date, days) => {\r\n    let data = new Date(date);\r\n    data.setDate(data.getDate() + days);\r\n    //console.log(data.toLocaleDateString(\"en-GB\"));\r\n    return data.toLocaleDateString(\"en-GB\");\r\n  };\r\n\r\n  const datePgVacation = (dateBegin) => {\r\n    let firstDate = new Date(dateBegin);\r\n    const dayWeek = firstDate.getDay();\r\n    let dataPgo = new Date(dateBegin);\r\n    const num =\r\n      dayWeek === 1\r\n        ? 5\r\n        : dayWeek === 2\r\n        ? 6\r\n        : dayWeek === 3\r\n        ? 7\r\n        : dayWeek === 4\r\n        ? 8\r\n        : dayWeek === 5\r\n        ? 2\r\n        : dayWeek === 6\r\n        ? 3\r\n        : 0;\r\n    dataPgo.setDate(dataPgo.getDate() - num);\r\n    //console.log(dayWeek);\r\n    return dataPgo.toLocaleDateString(\"en-GB\");\r\n  };\r\n\r\n  //Função para validação do dia do mes\r\n  const validationDayDate = (dateBegin, dayVacation, chosenDate) => {\r\n    const data01 = form.getFieldValue(dateBegin);\r\n    const timeMin = Date.parse(data01._d);\r\n    const newDate = new Date(timeMin);\r\n    let refDate = new Date(\r\n      newDate.getFullYear(),\r\n      newDate.getMonth(),\r\n      newDate.getDate()\r\n    );\r\n    const newChosenDate = new Date(\r\n      chosenDate.getFullYear(),\r\n      chosenDate.getMonth(),\r\n      chosenDate.getDate()\r\n    );\r\n\r\n    const day = form.getFieldValue(dayVacation);\r\n    refDate.setDate(refDate.getDate() + parseInt(day));\r\n    //console.log(data01);\r\n    //console.log(refDate);\r\n    //console.log(newDate);\r\n    //console.log(chosenDate);\r\n\r\n    if (newChosenDate <= refDate) {\r\n      if (\r\n        newChosenDate.getMonth() === refDate.getMonth() &&\r\n        newChosenDate.getDate() < refDate.getDate()\r\n      ) {\r\n        const aviso =\r\n          \"Data não pode ser inferior ou igual a data da primeira parcela. \";\r\n        warningNote(aviso);\r\n      } else if (newChosenDate.getMonth() < refDate.getMonth()) {\r\n        const aviso =\r\n          \"Mês não pode ser inferior ao mês da primeira parcela. Favor corrigir.\";\r\n        warningNote(aviso);\r\n      }\r\n      return false;\r\n    } else {\r\n      return true;\r\n    }\r\n  };\r\n\r\n  //Função para validação de data\r\n  function validatorDate(value, name) {\r\n    if (value === \"\") {\r\n      return false;\r\n    } else {\r\n      const dayweek = value._d.getDay();\r\n\r\n      if (dayweek === 0) {\r\n        const aviso =\r\n          \"Dia de inicio da férias cai no domingo. Data não permitida. Favor corrigir\";\r\n        warningNote(aviso);\r\n      } else if (dayweek === 6) {\r\n        const aviso =\r\n          \"Dia de inicio da férias cai no sábado. Data não permitida. Favor corrigir\";\r\n        warningNote(aviso);\r\n      }\r\n      if (value) {\r\n        const chosenDate = new Date(value._d);\r\n        const today = new Date();\r\n        let diff = Math.abs(chosenDate.getTime() - today.getTime());\r\n        let dias = Math.ceil(diff / (1000 * 60 * 60 * 24));\r\n\r\n        if (dias < 60) {\r\n          const aviso =\r\n            \"Não é permitido escolher data abaixo de 60 dias após a data de requisição. Por favor verifique o preenchimento\";\r\n\r\n          warningNote(aviso);\r\n          return false;\r\n        } else if (name === \"dateBeginVacation02\") {\r\n          return validationDayDate(\r\n            \"dateBeginVacation01\",\r\n            \"daysVacation01\",\r\n            chosenDate\r\n          );\r\n        } else if (name === \"dateBeginVacation03\") {\r\n          return validationDayDate(\r\n            \"dateBeginVacation02\",\r\n            \"daysVacation02\",\r\n            chosenDate\r\n          );\r\n        } else {\r\n          return true;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  //Função para validação de dias\r\n  const validatorDays = (value, name) => {\r\n    let diffDays = 0;\r\n    const dayP1 = form.getFieldValue(\"daysVacation01\");\r\n    const dayP2 = form.getFieldValue(\"daysVacation02\");\r\n\r\n    props.set({\r\n      show01: true,\r\n      show02: true,\r\n    });\r\n\r\n    if (name === \"daysVacation01\") {\r\n      diffDays = dayVacation - value;\r\n\r\n      if (\r\n        (value >= 14 || diffDays >= 14) &&\r\n        value <= dayVacation - 5 &&\r\n        value >= 5\r\n      ) {\r\n        setEnaRow({\r\n          enaRow01: false,\r\n          enaRow02: true,\r\n        });\r\n        return diffDays;\r\n      } else if (dayP2 < 5 || dayP2 === undefined || diffDays < 5) {\r\n        setEnaRow({\r\n          enaRow01: true,\r\n          enaRow02: true,\r\n        });\r\n      }\r\n    } else if (name === \"daysVacation02\") {\r\n      diffDays = dayVacation - dayP1 - value;\r\n\r\n      if (diffDays < 5) {\r\n        setEnaRow({\r\n          enaRow01: false,\r\n          enaRow02: true,\r\n        });\r\n      } else if (\r\n        value >= 14 ||\r\n        diffDays === 14 ||\r\n        (value >= 5 && value <= dayVacation - dayP1 - 5)\r\n      ) {\r\n        setEnaRow({\r\n          enaRow01: false,\r\n          enaRow02: false,\r\n        });\r\n      }\r\n    } else {\r\n      setEnaRow({\r\n        enaRow01: true,\r\n        enaRow02: true,\r\n      });\r\n    }\r\n    return diffDays;\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <fieldset>\r\n        <legend>Seleção de Férias</legend>\r\n        <Form\r\n          name=\"formVacation\"\r\n          labelAlign=\"left\"\r\n          fields={fieldsForm}\r\n          form={form}\r\n          onFieldsChange={(_, allfields) => {\r\n            setFieldsForm(allfields);\r\n            //console.log(fieldsForm);\r\n          }}\r\n        >\r\n          <Col span={20}>\r\n            <Row justify=\"space-around\">\r\n              <Form.Item label={\"Fim do Período Aquisitivo\"} name={\"periodEnd\"}>\r\n                <Input style={{ width: \"120px\" }} readOnly />\r\n              </Form.Item>\r\n\r\n              <Form.Item\r\n                name={\"unexcused\"}\r\n                label={\"Faltas não justificadas\"}\r\n                rules={[\r\n                  ({ setFieldsValue }) => ({\r\n                    validator(_, value) {\r\n                      if (value <= 5) {\r\n                        setFieldsValue({\r\n                          vacationDays: 30,\r\n                          daysVacation01: 30,\r\n                        });\r\n                      } else if (value > 5 && value <= 14) {\r\n                        setFieldsValue({\r\n                          vacationDays: 24,\r\n                          daysVacation01: 24,\r\n                        });\r\n                      } else if (value > 14 && value <= 23) {\r\n                        setFieldsValue({\r\n                          vacationDays: 18,\r\n                          daysVacation01: 18,\r\n                        });\r\n                      } else if (value > 23 && value <= 32) {\r\n                        setFieldsValue({\r\n                          vacationDays: 12,\r\n                          daysVacation01: 12,\r\n                        });\r\n                      } else {\r\n                        setFieldsValue({\r\n                          vacationDays: 0,\r\n                          daysVacation01: 0,\r\n                        });\r\n                      }\r\n                    },\r\n                  }),\r\n                ]}\r\n              >\r\n                <Input style={{ width: \"60px\" }} />\r\n              </Form.Item>\r\n\r\n              <Form.Item\r\n                name={\"vacationDays\"}\r\n                label={\"Dias Aquisitivos de Férias\"}\r\n                labelAlign=\"right\"\r\n              >\r\n                <Input style={{ width: \"60px\" }} readOnly />\r\n              </Form.Item>\r\n            </Row>\r\n            <Row>\r\n              <Form.Item\r\n                name={\"abonoPec\"}\r\n                rules={[\r\n                  ({ getFieldValue, setFieldsValue }) => ({\r\n                    validator(_, value) {\r\n                      //console.log(value);\r\n                      //console.log(abono);\r\n\r\n                      if (abono) {\r\n                        const third = (getFieldValue(\"vacationDays\") / 3) * 2;\r\n                        setFieldsValue({\r\n                          vacationDays: third,\r\n                          daysVacation01: third,\r\n                        });\r\n                      } else {\r\n                        const dayvac = (getFieldValue(\"vacationDays\") / 2) * 3;\r\n                        setFieldsValue({\r\n                          vacationDays: dayvac,\r\n                          daysVacation01: dayvac,\r\n                        });\r\n                      }\r\n                    },\r\n                  }),\r\n                ]}\r\n              >\r\n                <Checkbox\r\n                  onChange={(value) => {\r\n                    setAbono(value.target.checked);\r\n                    //console.log(value);\r\n                  }}\r\n                  value={\"checked\"}\r\n                >\r\n                  Abono\r\n                </Checkbox>\r\n              </Form.Item>\r\n            </Row>\r\n          </Col>\r\n          <Row>\r\n            <Col span={20}>\r\n              <Row justify=\"space-around\">\r\n                <Tooltip placement=\"top\" title={textData}>\r\n                  <Form.Item\r\n                    label={\"Data Início\"}\r\n                    name={\"dateBeginVacation01\"}\r\n                    rules={[\r\n                      {\r\n                        required: true,\r\n                        message:\r\n                          \"Obrigatório informar a data de inicio das férias.\",\r\n                      },\r\n                      ({ getFieldValue, setFieldsValue }) => ({\r\n                        validator(_, value) {\r\n                          const validDate = validatorDate(\r\n                            value,\r\n                            \"dateBeginVacation01\"\r\n                          );\r\n                          let datEnd = \"\";\r\n                          const datePgo = datePgVacation(value._d);\r\n                          //console.log(validDate);\r\n                          if (validDate) {\r\n                            const vacationDay = getFieldValue(\"daysVacation01\");\r\n\r\n                            if (vacationDay) {\r\n                              datEnd = dateEnd(\r\n                                Date.parse(value._d),\r\n                                vacationDay\r\n                              );\r\n                            }\r\n                            //console.log(datEnd);\r\n                            //console.log(value._d);\r\n                            setFieldsValue({\r\n                              dateEndVacation01: datEnd,\r\n                              datePgto01: datePgo,\r\n                            });\r\n                            return Promise.resolve(\r\n                              setFieldsValue({\r\n                                dateEndVacation01: datEnd,\r\n                                datePgto01: datePgo,\r\n                              })\r\n                            );\r\n                          } else {\r\n                            return Promise.reject(\r\n                              new Error(\r\n                                \"Data negada. Favor digitar uma data correta\"\r\n                              )\r\n                            );\r\n                          }\r\n                        },\r\n                      }),\r\n                    ]}\r\n                  >\r\n                    <DatePicker\r\n                      style={{ width: \"120px\" }}\r\n                      allowClear\r\n                      format=\"DD/MM/YYYY\"\r\n                    />\r\n                  </Form.Item>\r\n                </Tooltip>\r\n\r\n                <Tooltip placement=\"top\" title={textDays}>\r\n                  <Form.Item\r\n                    label={\"Qto Dias\"}\r\n                    name={\"daysVacation01\"}\r\n                    rules={[\r\n                      {\r\n                        required: true,\r\n                        message: \"Favor informar o número de dias de férias.\",\r\n                      },\r\n\r\n                      ({ getFieldValue, setFieldsValue, setFields }) => ({\r\n                        validator(_, value) {\r\n                          const testDate = getFieldValue(\"dateBeginVacation01\");\r\n\r\n                          const validDate = validatorDate(\r\n                            testDate,\r\n                            \"dateBeginVacation01\"\r\n                          );\r\n                          const totalDays = getFieldValue(\"vacationDays\");\r\n\r\n                          const datePgo = datePgVacation(testDate._d);\r\n\r\n                          if (testDate.length === 0) {\r\n                            setFields([\r\n                              {\r\n                                name: \"daysVacation01\",\r\n                                value: totalDays,\r\n                              },\r\n                            ]);\r\n                            return Promise.reject(\r\n                              new Error(\r\n                                \"Favor primeiro selecionar a data de inicio das férias corretamente.\"\r\n                              )\r\n                            );\r\n                          } else if (totalDays < 19) {\r\n                            const aviso =\r\n                              \"Numero de dias de férias insuficientes para parcelar férias. Valor será em cota única \";\r\n                            warningNote(aviso);\r\n                            setFieldsValue({\r\n                              daysVacation01: totalDays,\r\n                            });\r\n                            return Promise.reject(\r\n                              new Error(\"Não é permitido parcelar\")\r\n                            );\r\n                          } else {\r\n                            if (validDate) {\r\n                              if (value < totalDays && value > totalDays - 2) {\r\n                                //console.log(\"Primeiro Click\");\r\n                                const datEndP1 = dateEnd(\r\n                                  Date.parse(testDate._d),\r\n                                  totalDays - 5\r\n                                );\r\n\r\n                                const diffDays = validatorDays(\r\n                                  totalDays - 5,\r\n                                  \"daysVacation01\"\r\n                                );\r\n\r\n                                setFieldsValue({\r\n                                  daysVacation01: totalDays - 5,\r\n                                  dateEndVacation01: datEndP1,\r\n                                  datePgto01: datePgo,\r\n                                  daysVacation02: diffDays,\r\n                                  dateEndVacation02: \"\",\r\n                                  dateBeginVacation02: \"\",\r\n                                  datePgto02: \"\",\r\n                                  daysVacation03: \"\",\r\n                                  dateEndVacation03: \"\",\r\n                                  dateBeginVacation03: \"\",\r\n                                  datePgto03: \"\",\r\n                                });\r\n\r\n                                /* Se P2 e P3 igual 5 não permite que P1 aceite incrementar até 30 */\r\n                              } else if (\r\n                                getFieldValue(\"daysVacation02\") < 6 &&\r\n                                getFieldValue(\"daysVacation01\") >=\r\n                                  getFieldValue(\"vacationDays\") - 10 &&\r\n                                getFieldValue(\"daysVacation03\") === 5\r\n                              ) {\r\n                                console.log(\r\n                                  \"Erro: Se P2 e P3 igual 5 não permite que P1 aceite incrementar até 30 \"\r\n                                );\r\n                                return Promise.reject(\r\n                                  new Error(\"Máximo valor permitido\")\r\n                                );\r\n                                /* Se P3=0 e P2<5 e P1>25  */\r\n                              } else if (\r\n                                getFieldValue(\"daysVacation02\") <= 5 &&\r\n                                getFieldValue(\"daysVacation01\") > totalDays - 6\r\n                              ) {\r\n                                const datEndP1 = dateEnd(\r\n                                  Date.parse(testDate._d),\r\n                                  totalDays\r\n                                );\r\n\r\n                                setFieldsValue({\r\n                                  daysVacation01: totalDays,\r\n                                  dateEndVacation01: datEndP1,\r\n                                  datePgto01: datePgo,\r\n                                  daysVacation02: \"\",\r\n                                  dateEndVacation02: \"\",\r\n                                  dateBeginVacation02: \"\",\r\n                                  datePgto02: \"\",\r\n                                });\r\n\r\n                                validatorDays(value, \"daysVacation01\");\r\n                              } else {\r\n                                const datEndP1 = dateEnd(\r\n                                  Date.parse(testDate._d),\r\n                                  value\r\n                                );\r\n\r\n                                /* dataInP2=\"\" e diasP2=0 */\r\n                                if (\r\n                                  getFieldValue(\"dateBeginVacation02\") === \"\" &&\r\n                                  getFieldValue(\"daysVacation02\") === \"\"\r\n                                ) {\r\n                                  const diffDays = validatorDays(\r\n                                    value,\r\n                                    \"daysVacation01\"\r\n                                  );\r\n\r\n                                  setFieldsValue({\r\n                                    dateEndVacation01: datEndP1,\r\n                                    datePgto01: datePgo,\r\n                                    daysVacation02: diffDays,\r\n                                    dateEndVacation02: \"\",\r\n                                    dateBeginVacation02: \"\",\r\n                                    datePgto02: \"\",\r\n                                    daysVacation03: \"\",\r\n                                    dateEndVacation03: \"\",\r\n                                    dateBeginVacation03: \"\",\r\n                                    datePgto03: \"\",\r\n                                  });\r\n                                } else if (\r\n                                  getFieldValue(\"daysVacation02\") !== \"\"\r\n                                ) {\r\n                                  const dateBegin02 = getFieldValue(\r\n                                    \"dateBeginVacation02\"\r\n                                  );\r\n\r\n                                  const datePgo2 = datePgVacation(\r\n                                    dateBegin02._d\r\n                                  );\r\n\r\n                                  const diasP2 =\r\n                                    totalDays -\r\n                                    getFieldValue(\"daysVacation01\") -\r\n                                    getFieldValue(\"daysVacation03\");\r\n                                  /* Existe data parcela 2 */\r\n                                  if (dateBegin02 !== \"\") {\r\n                                    const datEndP2 = dateEnd(\r\n                                      Date.parse(dateBegin02._d),\r\n                                      value\r\n                                    );\r\n                                    /* Existe data parcela 2 e diasP3*/\r\n                                    if (\r\n                                      getFieldValue(\"daysVacation03\") !== \"\"\r\n                                    ) {\r\n                                      const daysVac03 =\r\n                                        getFieldValue(\"daysVacation03\");\r\n\r\n                                      const dataInP3 =\r\n                                        getFieldValue(\"dateBeginVacation03\") !==\r\n                                        \"\"\r\n                                          ? getFieldValue(\"dateBeginVacation03\")\r\n                                          : \"\";\r\n\r\n                                      const datePgo3 = datePgVacation(\r\n                                        dataInP3._d\r\n                                      );\r\n\r\n                                      /* Existe dataP2 e dataP3 */\r\n                                      if (dataInP3 !== \"\") {\r\n                                        const datEndP3 = dateEnd(\r\n                                          Date.parse(dataInP3._d),\r\n                                          daysVac03\r\n                                        );\r\n\r\n                                        setFieldsValue({\r\n                                          dateEndVacation01: datEndP1,\r\n                                          datePgto01: datePgo,\r\n                                          daysVacation02: diasP2,\r\n                                          dateEndVacation02: datEndP2,\r\n                                          dateBeginVacation02: dateBegin02,\r\n                                          datePgto02: datePgo2,\r\n                                          daysVacation03: daysVac03,\r\n                                          dateEndVacation03: datEndP3,\r\n                                          dateBeginVacation03: dataInP3,\r\n                                          datePgto03: datePgo3,\r\n                                        });\r\n                                      } else {\r\n                                        setFieldsValue({\r\n                                          dateEndVacation01: datEndP1,\r\n                                          datePgto01: datePgo,\r\n                                          daysVacation02: diasP2,\r\n                                          dateEndVacation02: datEndP2,\r\n                                          dateBeginVacation02: dateBegin02,\r\n                                          datePgto02: datePgo2,\r\n                                          daysVacation03: daysVac03,\r\n                                          dateEndVacation03: \"\",\r\n                                          dateBeginVacation03: \"\",\r\n                                          datePgto03: \"\",\r\n                                        });\r\n                                        validatorDays(diasP2, \"daysVacation02\");\r\n                                      }\r\n                                      /* Existe data parcela 2 e diasP3=0 */\r\n                                    } else if (\r\n                                      getFieldValue(\"daysVacation03\") === \"\"\r\n                                    ) {\r\n                                      setFieldsValue({\r\n                                        dateEndVacation01: datEndP1,\r\n                                        datePgto01: datePgo,\r\n                                        daysVacation02: diasP2,\r\n                                        dateEndVacation02: datEndP2,\r\n                                        dateBeginVacation02: dateBegin02,\r\n                                        datePgto02: datePgo2,\r\n                                        daysVacation03: \"\",\r\n                                        dateEndVacation03: \"\",\r\n                                        dateBeginVacation03: \"\",\r\n                                        datePgto03: \"\",\r\n                                      });\r\n                                    }\r\n                                    /* Sem dataP2 */\r\n                                  } else {\r\n                                    const diffDays = validatorDays(\r\n                                      value,\r\n                                      \"daysVacation01\"\r\n                                    );\r\n\r\n                                    setFieldsValue({\r\n                                      dateEndVacation01: datEndP1,\r\n                                      datePgto01: datePgo,\r\n                                      daysVacation02: diffDays,\r\n                                      dateEndVacation02: \"\",\r\n                                      datePgto02: \"\",\r\n                                      dateBeginVacation02: \"\",\r\n                                      daysVacation03: \"\",\r\n                                      dateEndVacation03: \"\",\r\n                                      datePgto03: \"\",\r\n                                      dateBeginVacation03: \"\",\r\n                                    });\r\n                                  }\r\n\r\n                                  return Promise.resolve();\r\n                                }\r\n                              }\r\n                            } else {\r\n                              return Promise.reject(\r\n                                new Error(\"Data está invalida. Favor corrigir\")\r\n                              );\r\n                            }\r\n                          }\r\n                        },\r\n                      }),\r\n                    ]}\r\n                  >\r\n                    <InputNumber\r\n                      min={5}\r\n                      max={\r\n                        form.getFieldValue(\"daysVacation02\") < 6 &&\r\n                        form.getFieldValue(\"daysVacation03\") === 5\r\n                          ? form.getFieldValue(\"vacationDays\") -\r\n                            form.getFieldValue(\"daysVacation02\") -\r\n                            form.getFieldValue(\"daysVacation03\")\r\n                          : form.getFieldValue(\"vacationDays\")\r\n                      }\r\n                      style={{ width: \"60px\" }}\r\n                    />\r\n                  </Form.Item>\r\n                </Tooltip>\r\n                <Form.Item label={\"Data Fim\"} name={\"dateEndVacation01\"}>\r\n                  <Input style={{ width: \"120px\" }} readOnly />\r\n                </Form.Item>\r\n                <Form.Item label={\"Data Pgto\"} name={\"datePgto01\"}>\r\n                  <Input style={{ width: \"120px\" }} readOnly />\r\n                </Form.Item>\r\n              </Row>\r\n\r\n              <div\r\n                hidden={!enaRow.enaRow01 || !props.ena.show01 ? false : true}\r\n              >\r\n                <Row justify=\"space-around\">\r\n                  <Tooltip placement=\"top\" title={textData}>\r\n                    <Form.Item\r\n                      label={\"Data Início\"}\r\n                      name={\"dateBeginVacation02\"}\r\n                      rules={[\r\n                        {\r\n                          required: true,\r\n                          message:\r\n                            \"Obrigatório informar a data de inicio das férias.\",\r\n                        },\r\n                        ({ getFieldValue, setFieldsValue }) => ({\r\n                          validator(_, value) {\r\n                            const validDate = validatorDate(\r\n                              value,\r\n                              \"dateBeginVacation02\"\r\n                            );\r\n\r\n                            let datEnd = \"\";\r\n                            const datePgo2 = datePgVacation(value._d);\r\n                            if (\r\n                              getFieldValue(\"daysVacation01\") < 14 &&\r\n                              getFieldValue(\"daysVacation02\") < 14 &&\r\n                              getFieldValue(\"daysVacation03\") < 14\r\n                            ) {\r\n                              const aviso =\r\n                                \"Uma das parcela tem que maior ou igual a 14 dias. Favor corrigir \";\r\n                              warningNote(aviso);\r\n                              return Promise.reject(\r\n                                new Error(\"Parcelas não permitidas\")\r\n                              );\r\n                            } else {\r\n                              if (validDate) {\r\n                                const vacationDay =\r\n                                  getFieldValue(\"daysVacation02\");\r\n\r\n                                if (vacationDay) {\r\n                                  datEnd = dateEnd(\r\n                                    Date.parse(value._d),\r\n                                    vacationDay\r\n                                  );\r\n                                }\r\n                                setFieldsValue({\r\n                                  dateEndVacation02: datEnd,\r\n                                  datePgto02: datePgo2,\r\n                                });\r\n                                return Promise.resolve(\r\n                                  setFieldsValue({\r\n                                    dateEndVacation02: datEnd,\r\n                                    datePgto02: datePgo2,\r\n                                  })\r\n                                );\r\n                              } else {\r\n                                return Promise.reject(\r\n                                  new Error(\r\n                                    \"Data negada. Favor digitar uma data correta\"\r\n                                  )\r\n                                );\r\n                              }\r\n                            }\r\n                          },\r\n                        }),\r\n                      ]}\r\n                    >\r\n                      <DatePicker\r\n                        style={{ width: \"120px\" }}\r\n                        allowClear\r\n                        format=\"DD/MM/YYYY\"\r\n                      />\r\n                    </Form.Item>\r\n                  </Tooltip>\r\n                  <Tooltip placement=\"top\" title={textDays}>\r\n                    <Form.Item\r\n                      label={\"Qto Dias\"}\r\n                      name={\"daysVacation02\"}\r\n                      rules={[\r\n                        {\r\n                          required: true,\r\n                          message: \"Favor informar o número de dias de férias.\",\r\n                        },\r\n\r\n                        ({ getFieldValue, setFieldsValue, setFields }) => ({\r\n                          validator(_, value) {\r\n                            const testDate = getFieldValue(\r\n                              \"dateBeginVacation02\"\r\n                            );\r\n\r\n                            const validDate = validatorDate(\r\n                              testDate,\r\n                              \"dateBeginVacation02\"\r\n                            );\r\n                            const totalDays = getFieldValue(\"vacationDays\");\r\n\r\n                            const datePgo2 = datePgVacation(testDate._d);\r\n\r\n                            if (totalDays < 25) {\r\n                              const aviso =\r\n                                \"Numero de dias de férias insuficientes para parcelar as férias em 3 vezes. \";\r\n                              warningNote(aviso);\r\n                              setFieldsValue({\r\n                                daysVacation02:\r\n                                  totalDays - getFieldValue(\"daysVacation01\"),\r\n                              });\r\n                              return Promise.reject(\r\n                                new Error(\"Não é permitido parcelar\")\r\n                              );\r\n                            } else {\r\n                              if (testDate._d) {\r\n                                if (validDate) {\r\n                                  if (\r\n                                    value <=\r\n                                      totalDays -\r\n                                        getFieldValue(\"daysVacation01\") &&\r\n                                    value >=\r\n                                      totalDays -\r\n                                        getFieldValue(\"daysVacation01\") -\r\n                                        2\r\n                                  ) {\r\n                                    const datEndP2 = dateEnd(\r\n                                      Date.parse(testDate._d),\r\n                                      value - 4\r\n                                    );\r\n\r\n                                    setFields([\r\n                                      {\r\n                                        name: \"daysVacation02\",\r\n                                        value: value - 4,\r\n                                      },\r\n                                      {\r\n                                        name: \"dateEndVacation02\",\r\n                                        value: datEndP2,\r\n                                      },\r\n                                      {\r\n                                        name: \"dateBeginVacation03\",\r\n                                        value: \"\",\r\n                                      },\r\n                                      { name: \"daysVacation03\", value: 5 },\r\n                                      { name: \"dateEndVacation03\", value: \"\" },\r\n                                    ]);\r\n\r\n                                    validatorDays(value - 4, \"daysVacation02\");\r\n                                    /* caso reduza valor P3<5 e P2 aumenta */\r\n                                  } else if (\r\n                                    getFieldValue(\"daysVacation03\") < 6 &&\r\n                                    getFieldValue(\"daysVacation02\") >\r\n                                      totalDays -\r\n                                        getFieldValue(\"daysVacation01\") -\r\n                                        5\r\n                                  ) {\r\n                                    const daysVac02 =\r\n                                      getFieldValue(\"vacationDays\") -\r\n                                      getFieldValue(\"daysVacation01\");\r\n\r\n                                    const datEndP2 = dateEnd(\r\n                                      Date.parse(testDate._d),\r\n                                      daysVac02\r\n                                    );\r\n\r\n                                    setFieldsValue({\r\n                                      daysVacation02: daysVac02,\r\n                                      dateEndVacation02: datEndP2,\r\n                                      datePgto02: datePgo2,\r\n                                      daysVacation03: \"\",\r\n                                      dateEndVacation03: \"\",\r\n                                      dateBeguinVacation03: \"\",\r\n                                      datePgto03: \"\",\r\n                                    });\r\n\r\n                                    validatorDays(daysVac02, \"daysVacation02\");\r\n                                  } else if (\r\n                                    getFieldValue(\"daysVacation02\") < 6 &&\r\n                                    getFieldValue(\"daysVacation03\") < 6\r\n                                  ) {\r\n                                    return Promise.reject();\r\n                                    /*Se ok  */\r\n                                  } else {\r\n                                    const diffDays = validatorDays(\r\n                                      value,\r\n                                      \"daysVacation02\"\r\n                                    );\r\n                                    const datEndP2 = dateEnd(\r\n                                      Date.parse(testDate._d),\r\n                                      value\r\n                                    );\r\n\r\n                                    /* Com o valor da data de inicio */\r\n                                    if (\r\n                                      getFieldValue(\"dateBeginVacation03\") ===\r\n                                        \"\" ||\r\n                                      undefined\r\n                                    ) {\r\n                                      setFieldsValue({\r\n                                        dateEndVacation02: datEndP2,\r\n                                        datePgto02: datePgo2,\r\n                                        daysVacation03: diffDays,\r\n                                        dateEndVacation03: \"\",\r\n                                        dateBeguinVacation03: \"\",\r\n                                        datePgto03: \"\",\r\n                                      });\r\n                                    } else {\r\n                                      const datEndP3 = dateEnd(\r\n                                        Date.parse(\r\n                                          getFieldValue(\"dateBeginVacation03\")\r\n                                            ._d\r\n                                        ),\r\n                                        diffDays\r\n                                      );\r\n\r\n                                      const datePgo3 = datePgVacation(\r\n                                        getFieldValue(\"dateBeginVacation03\")._d\r\n                                      );\r\n\r\n                                      setFieldsValue({\r\n                                        dateEndVacation02: datEndP2,\r\n                                        datePgto02: datePgo2,\r\n                                        daysVacation03: diffDays,\r\n                                        dateEndVacation03: datEndP3,\r\n                                        datePgto03: datePgo3,\r\n                                      });\r\n                                    }\r\n\r\n                                    return Promise.resolve();\r\n                                  }\r\n                                } else {\r\n                                  return Promise.reject(\r\n                                    new Error(\r\n                                      \"Data está invalida. Favor corrigir\"\r\n                                    )\r\n                                  );\r\n                                }\r\n                              } else {\r\n                                return Promise.reject(\r\n                                  new Error(\r\n                                    \"Favor primeiro selecionar a data de inicio das férias corretamente.\"\r\n                                  )\r\n                                );\r\n                              }\r\n                            }\r\n                          },\r\n                        }),\r\n                      ]}\r\n                    >\r\n                      <InputNumber\r\n                        min={5}\r\n                        max={\r\n                          form.getFieldValue(\"vacationDays\") -\r\n                          form.getFieldValue(\"daysVacation01\")\r\n                        }\r\n                        style={{ width: \"60px\" }}\r\n                      />\r\n                    </Form.Item>\r\n                  </Tooltip>\r\n                  <Form.Item label={\"Data Fim\"} name={\"dateEndVacation02\"}>\r\n                    <Input style={{ width: \"120px\" }} readOnly />\r\n                  </Form.Item>\r\n                  <Form.Item label={\"Data Pgto\"} name={\"datePgto02\"}>\r\n                    <Input style={{ width: \"120px\" }} readOnly />\r\n                  </Form.Item>\r\n                </Row>\r\n              </div>\r\n              <div\r\n                hidden={!enaRow.enaRow02 || !props.ena.show02 ? false : true}\r\n              >\r\n                <Row justify=\"space-around\">\r\n                  <Tooltip placement=\"top\" title={textData}>\r\n                    <Form.Item\r\n                      label={\"Data Início\"}\r\n                      name={\"dateBeginVacation03\"}\r\n                      rules={[\r\n                        {\r\n                          required: true,\r\n                          message:\r\n                            \"Obrigatório informar a data de inicio das férias.\",\r\n                        },\r\n                        ({ getFieldValue, setFieldsValue }) => ({\r\n                          validator(_, value) {\r\n                            const validDate = validatorDate(\r\n                              value,\r\n                              \"dateBeginVacation03\"\r\n                            );\r\n                            let datEnd = \"\";\r\n                            //console.log(validDate);\r\n                            const datePgo3 = datePgVacation(value._d);\r\n                            if (\r\n                              getFieldValue(\"daysVacation01\") < 14 &&\r\n                              getFieldValue(\"daysVacation02\") < 14 &&\r\n                              getFieldValue(\"daysVacation03\") < 14\r\n                            ) {\r\n                              const aviso =\r\n                                \"Uma das parcela tem que maior ou igual a 14 dias. Favor corrigir \";\r\n                              warningNote(aviso);\r\n                              return Promise.reject(\r\n                                new Error(\"Parcelas não permitidas\")\r\n                              );\r\n                            } else {\r\n                              if (validDate) {\r\n                                const vacationDay =\r\n                                  getFieldValue(\"daysVacation03\");\r\n\r\n                                if (vacationDay) {\r\n                                  datEnd = dateEnd(\r\n                                    Date.parse(value._d),\r\n                                    vacationDay\r\n                                  );\r\n                                }\r\n\r\n                                setFieldsValue({\r\n                                  dateEndVacation03: datEnd,\r\n                                  datePgto03: datePgo3,\r\n                                });\r\n                                return Promise.resolve(\r\n                                  setFieldsValue({\r\n                                    dateEndVacation03: datEnd,\r\n                                    datePgto03: datePgo3,\r\n                                  })\r\n                                );\r\n                              } else {\r\n                                return Promise.reject(\r\n                                  new Error(\r\n                                    \"Data negada. Favor digitar uma data correta\"\r\n                                  )\r\n                                );\r\n                              }\r\n                            }\r\n                          },\r\n                        }),\r\n                      ]}\r\n                    >\r\n                      <DatePicker\r\n                        style={{ width: \"120px\" }}\r\n                        allowClear\r\n                        format=\"DD/MM/YYYY\"\r\n                      />\r\n                    </Form.Item>\r\n                  </Tooltip>\r\n                  <Form.Item label={\"Qto Dias\"} name={\"daysVacation03\"}>\r\n                    <InputNumber style={{ width: \"60px\" }} readOnly />\r\n                  </Form.Item>\r\n                  <Form.Item label={\"Data Fim\"} name={\"dateEndVacation03\"}>\r\n                    <Input style={{ width: \"120px\" }} readOnly />\r\n                  </Form.Item>\r\n                  <Form.Item label={\"Data Pgto\"} name={\"datePgto03\"}>\r\n                    <Input style={{ width: \"120px\" }} readOnly />\r\n                  </Form.Item>\r\n                </Row>\r\n              </div>\r\n            </Col>\r\n            <Col span={4}>\r\n              <Row>\r\n                <Form.Item name={\"dtsal\"} style={{ marginTop: \"-55px\" }}>\r\n                  <Radio.Group>\r\n                    <Space\r\n                      direction=\"vertical\"\r\n                      size={35}\r\n                      style={{ display: \"flex\", marginTop: \"-55px\" }}\r\n                    >\r\n                      <Radio value={0} checked>\r\n                        Não\r\n                      </Radio>\r\n                      <Radio value={1}>13 Sal</Radio>\r\n                      <span\r\n                        hidden={\r\n                          !enaRow.enaRow01 || !props.ena.show01 ? false : true\r\n                        }\r\n                      >\r\n                        <Radio value={2}>13 Sal</Radio>\r\n                      </span>\r\n                      <span\r\n                        hidden={\r\n                          !enaRow.enaRow02 || !props.ena.show02 ? false : true\r\n                        }\r\n                      >\r\n                        <Radio value={3}>13 Sal</Radio>\r\n                      </span>\r\n                    </Space>\r\n                  </Radio.Group>\r\n                </Form.Item>\r\n              </Row>\r\n            </Col>\r\n          </Row>\r\n        </Form>\r\n      </fieldset>\r\n    </>\r\n  );\r\n}\r\n","import { Input, Form, Table, Button, Row, Col, Tooltip } from \"antd\";\r\nimport \"./container.css\";\r\nimport { useState } from \"react\";\r\nimport { FieldData } from \"./containerInterface\";\r\n\r\nfunction ContainerObservation() {\r\n  const [fields, setFields] = useState<FieldData[]>([\r\n    { name: \"approver\", value: \"\" },\r\n  ]);\r\n\r\n  const [dataSource, setDataSource] = useState([\r\n    {\r\n      key: \"\",\r\n      usu: \"\",\r\n      dateTime: \"\",\r\n      role: \"\",\r\n      description: \"\",\r\n    },\r\n  ]);\r\n\r\n  const [count, setCount] = useState(0);\r\n\r\n  const columns = [\r\n    {\r\n      title: \"Nome\",\r\n      dataIndex: \"usu\",\r\n      key: \"key\",\r\n      width: \"20%\",\r\n    },\r\n    {\r\n      title: \"Cargo\",\r\n      dataIndex: \"office\",\r\n      key: \"key\",\r\n      width: \"20%\",\r\n    },\r\n    {\r\n      title: \"Data/Hora\",\r\n      dataIndex: \"dateTime\",\r\n      key: \"key\",\r\n      width: \"20%\",\r\n    },\r\n    {\r\n      title: \"Papel\",\r\n      dataIndex: \"paper\",\r\n      key: \"key\",\r\n      width: \"20%\",\r\n    },\r\n    {\r\n      title: \"Observações\",\r\n      dataIndex: \"description\",\r\n      key: \"key\",\r\n      width: \"20%\",\r\n    },\r\n  ];\r\n\r\n  interface obsItem {\r\n    key: string;\r\n    usu: string;\r\n    dateTime: string;\r\n    role: string;\r\n    description: string;\r\n  }\r\n\r\n  const onFinish = (values: string) => {\r\n    const now = new Date();\r\n    const newObs: obsItem = {\r\n      key: count.toString(),\r\n      usu: values[\"approver\"],\r\n      dateTime: now.toLocaleString(\"en-GB\", { timeZone: \"UTC\" }),\r\n      role: \"\",\r\n      description: values[\"descriptionApp\"],\r\n    };\r\n\r\n    setCount((prev) => prev + 1);\r\n    setDataSource((prev) => {\r\n      return [newObs, ...prev];\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <fieldset>\r\n        <legend>Observações</legend>\r\n        <Form\r\n          fields={fields}\r\n          onFieldsChange={(_, allFields) => {}}\r\n          onFinish={onFinish}\r\n        >\r\n          <Row gutter={20}>\r\n            <Col span={20}>\r\n              <Form.Item\r\n                name={\"approver\"}\r\n                label={\"Aprovador\"}\r\n                labelAlign=\"left\"\r\n                labelCol={{ span: 4 }}\r\n                wrapperCol={{ span: 10 }}\r\n              >\r\n                <Input style={{ marginLeft: \"25px\" }} />\r\n              </Form.Item>\r\n            </Col>\r\n            <Col span={4}>\r\n              <Form.Item labelAlign=\"right\">\r\n                <Button block type=\"primary\" htmlType=\"submit\">\r\n                  Gravar\r\n                </Button>\r\n              </Form.Item>\r\n            </Col>\r\n          </Row>\r\n          <Tooltip title=\"Campo opcional para acrescentar observações. Após digitar pressionar tecla 'Gravar'.\">\r\n            <Form.Item\r\n              name={\"descriptionApp\"}\r\n              label={\"Observações\"}\r\n              labelAlign=\"left\"\r\n              labelCol={{ span: 4 }}\r\n            >\r\n              <Input.TextArea showCount maxLength={150} />\r\n            </Form.Item>\r\n          </Tooltip>\r\n          <Form.Item label={\"Histórico\"} labelAlign=\"left\">\r\n            <Table dataSource={dataSource} columns={columns}></Table>\r\n          </Form.Item>\r\n        </Form>\r\n      </fieldset>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ContainerObservation;\r\n","import ContainerIdentify from \"../containers/containersCommonFile/containerIdentify\";\r\nimport ContainerEmployee from \"../containers/containersCommonFile/containeEmployee\";\r\nimport ContainerInfoVacation from \"../containers/containersVacation/containerInfoVacation\";\r\nimport ContainerVacation from \"../containers/containersVacation/containerVacation\";\r\nimport ContainerObservation from \"../containers/containersCommonFile/containerObservation\";\r\nimport { Form } from \"antd\";\r\nimport moment from \"moment\";\r\nimport { useState } from \"react\";\r\n\r\nexport default function FormPageVacation() {\r\n  const [showRow, setShowRow] = useState({\r\n    show01: true,\r\n    show02: true,\r\n  });\r\n\r\n  const [employee, setEmployee] = useState(true);\r\n\r\n  return (\r\n    <>\r\n      <div>\r\n        <Form.Provider\r\n          onFormFinish={(name, { values, forms }) => {\r\n            //console.log(name);\r\n            //console.log(values);\r\n            //console.log(values.who);\r\n            //console.log(forms);\r\n            //const { formVacation } = forms;\r\n            if (name === \"formIdentify\" && values.who === \"employeeVacation\") {\r\n              setEmployee(false);\r\n            } else {\r\n              setEmployee(true);\r\n            }\r\n          }}\r\n        >\r\n          <ContainerIdentify />\r\n          <span hidden={employee}>\r\n            <ContainerEmployee />\r\n          </span>\r\n        </Form.Provider>\r\n        <Form.Provider\r\n          onFormFinish={(name, { values, forms }) => {\r\n            console.log(name);\r\n            console.log(values);\r\n            console.log(forms);\r\n            const { formVacation } = forms;\r\n            const element = document.querySelector(\"span.ant-checkbox\");\r\n\r\n            if (values.tableInfo.status === \"Definido\") {\r\n              for (let i = 0; i < values.tableInfo.part; i++) {\r\n                formVacation.setFields([\r\n                  {\r\n                    name: \"dateBeginVacation0\" + (i + 1),\r\n                    value: moment(\r\n                      values.tableInfo.children[i].dateIn,\r\n                      \"DD/MM/YYYY\"\r\n                    ),\r\n                  },\r\n                  {\r\n                    name: \"daysVacation0\" + (i + 1),\r\n                    value: values.tableInfo.children[i].day,\r\n                  },\r\n                  {\r\n                    name: \"dateEndVacation0\" + (i + 1),\r\n                    value: values.tableInfo.children[i].dateEnd,\r\n                  },\r\n                ]);\r\n              }\r\n            } else if (values.tableInfo.status === \"Aberto\") {\r\n              formVacation.setFields([\r\n                {\r\n                  name: \"vacationDays\",\r\n                  value: values.tableInfo.day,\r\n                },\r\n                {\r\n                  name: \"daysVacation01\",\r\n                  value: values.tableInfo.day,\r\n                },\r\n                {\r\n                  name: \"periodEnd\",\r\n                  value: values.tableInfo.perAqEnd,\r\n                },\r\n              ]);\r\n\r\n              element.classList.remove(\"ant-checkbox-checked\");\r\n            }\r\n            formVacation.setFields([\r\n              {\r\n                name: \"dateBeginVacation01\",\r\n                value: moment(\r\n                  values.tableInfo.children[0].dateIn,\r\n                  \"DD/MM/YYYY\"\r\n                ),\r\n              },\r\n              {\r\n                name: \"periodEnd\",\r\n                value: values.tableInfo.perAqEnd,\r\n              },\r\n              {\r\n                name: \"daysVacation01\",\r\n                value: values.tableInfo.children[0].day,\r\n              },\r\n              {\r\n                name: \"dateEndVacation01\",\r\n                value: values.tableInfo.children[0].dateEnd,\r\n              },\r\n              {\r\n                name: \"dateBeginVacation02\",\r\n                value: moment(\r\n                  values.tableInfo.children[1].dateIn,\r\n                  \"DD/MM/YYYY\"\r\n                ),\r\n              },\r\n              {\r\n                name: \"daysVacation02\",\r\n                value: values.tableInfo.children[1].day,\r\n              },\r\n              {\r\n                name: \"dateEndVacation02\",\r\n                value: values.tableInfo.children[1].dateEnd,\r\n              },\r\n              {\r\n                name: \"dateBeginVacation03\",\r\n                value: moment(\r\n                  values.tableInfo.children[2].dateIn,\r\n                  \"DD/MM/YYYY\"\r\n                ),\r\n              },\r\n              {\r\n                name: \"daysVacation03\",\r\n                value: values.tableInfo.children[2].day,\r\n              },\r\n              {\r\n                name: \"dateEndVacation03\",\r\n                value: values.tableInfo.children[2].dateEnd,\r\n              },\r\n              { name: \"vacationDays\", value: values.tableInfo.day },\r\n            ]);\r\n            if (values.tableInfo.part === \"2\") {\r\n              setShowRow({\r\n                show01: false,\r\n                show02: true,\r\n              });\r\n            } else if (values.tableInfo.part === \"3\") {\r\n              setShowRow({\r\n                show01: false,\r\n                show02: false,\r\n              });\r\n            }\r\n          }}\r\n        >\r\n          <ContainerInfoVacation />\r\n          <ContainerVacation ena={showRow} set={setShowRow} />\r\n        </Form.Provider>\r\n        <ContainerObservation />\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import ContainerIdentify from \"../containers/containersCommonFile/containerIdentify\";\r\nimport ContainerInfoVacation from \"../containers/containersVacation/containerInfoVacation\";\r\nimport ContainerVacation from \"../containers/containersVacation/containerVacation\";\r\nimport { Form } from \"antd\";\r\nimport moment from \"moment\";\r\nimport { useState } from \"react\";\r\n\r\nexport default function FormOwnSolicitation() {\r\n  const [showRow, setShowRow] = useState({\r\n    show01: true,\r\n    show02: true,\r\n  });\r\n\r\n  const [employee, setEmployee] = useState(false);\r\n\r\n  return (\r\n    <>\r\n      <div>\r\n        <Form.Provider>\r\n          <ContainerIdentify own={true} />\r\n        </Form.Provider>\r\n        <Form.Provider\r\n          onFormFinish={(name, { values, forms }) => {\r\n            //console.log(name);\r\n            //console.log(values);\r\n            //console.log(forms);\r\n            const { formVacation } = forms;\r\n            const element = document.querySelector(\"span.ant-checkbox\");\r\n\r\n            if (values.tableInfo.status === \"Definido\") {\r\n              for (let i = 0; i < values.tableInfo.part; i++) {\r\n                formVacation.setFields([\r\n                  {\r\n                    name: \"dateBeginVacation0\" + (i + 1),\r\n                    value: moment(\r\n                      values.tableInfo.children[i].dateIn,\r\n                      \"DD/MM/YYYY\"\r\n                    ),\r\n                  },\r\n                  {\r\n                    name: \"daysVacation0\" + (i + 1),\r\n                    value: values.tableInfo.children[i].day,\r\n                  },\r\n                  {\r\n                    name: \"dateEndVacation0\" + (i + 1),\r\n                    value: values.tableInfo.children[i].dateEnd,\r\n                  },\r\n                ]);\r\n              }\r\n            } else if (values.tableInfo.status === \"Aberto\") {\r\n              formVacation.setFields([\r\n                {\r\n                  name: \"vacationDays\",\r\n                  value: values.tableInfo.day,\r\n                },\r\n                {\r\n                  name: \"daysVacation01\",\r\n                  value: values.tableInfo.day,\r\n                },\r\n                {\r\n                  name: \"periodEnd\",\r\n                  value: values.tableInfo.perAqEnd,\r\n                },\r\n              ]);\r\n\r\n              element.classList.remove(\"ant-checkbox-checked\");\r\n            }\r\n            formVacation.setFields([\r\n              {\r\n                name: \"dateBeginVacation01\",\r\n                value: moment(\r\n                  values.tableInfo.children[0].dateIn,\r\n                  \"DD/MM/YYYY\"\r\n                ),\r\n              },\r\n              {\r\n                name: \"periodEnd\",\r\n                value: values.tableInfo.perAqEnd,\r\n              },\r\n              {\r\n                name: \"daysVacation01\",\r\n                value: values.tableInfo.children[0].day,\r\n              },\r\n              {\r\n                name: \"dateEndVacation01\",\r\n                value: values.tableInfo.children[0].dateEnd,\r\n              },\r\n              {\r\n                name: \"dateBeginVacation02\",\r\n                value: moment(\r\n                  values.tableInfo.children[1].dateIn,\r\n                  \"DD/MM/YYYY\"\r\n                ),\r\n              },\r\n              {\r\n                name: \"daysVacation02\",\r\n                value: values.tableInfo.children[1].day,\r\n              },\r\n              {\r\n                name: \"dateEndVacation02\",\r\n                value: values.tableInfo.children[1].dateEnd,\r\n              },\r\n              {\r\n                name: \"dateBeginVacation03\",\r\n                value: moment(\r\n                  values.tableInfo.children[2].dateIn,\r\n                  \"DD/MM/YYYY\"\r\n                ),\r\n              },\r\n              {\r\n                name: \"daysVacation03\",\r\n                value: values.tableInfo.children[2].day,\r\n              },\r\n              {\r\n                name: \"dateEndVacation03\",\r\n                value: values.tableInfo.children[2].dateEnd,\r\n              },\r\n              { name: \"vacationDays\", value: values.tableInfo.day },\r\n            ]);\r\n            if (values.tableInfo.part === \"2\") {\r\n              setShowRow({\r\n                show01: false,\r\n                show02: true,\r\n              });\r\n            } else if (values.tableInfo.part === \"3\") {\r\n              setShowRow({\r\n                show01: false,\r\n                show02: false,\r\n              });\r\n            }\r\n          }}\r\n        >\r\n          <ContainerInfoVacation />\r\n          <ContainerVacation ena={showRow} set={setShowRow} />\r\n        </Form.Provider>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import ContainerIdentify from \"../containers/containersCommonFile/containerIdentify\";\r\nimport ContainerEmployee from \"../containers/containersCommonFile/containeEmployee\";\r\nimport ContainerInfoVacation from \"../containers/containersVacation/containerInfoVacation\";\r\nimport ContainerVacation from \"../containers/containersVacation/containerVacation\";\r\nimport { Form } from \"antd\";\r\nimport moment from \"moment\";\r\nimport { useState } from \"react\";\r\n\r\nexport default function FormEmployeeSolicitation() {\r\n  const [showRow, setShowRow] = useState({\r\n    show01: true,\r\n    show02: true,\r\n  });\r\n\r\n  const [employee, setEmployee] = useState(true);\r\n\r\n  return (\r\n    <>\r\n      <div>\r\n        <ContainerIdentify own={true} />\r\n        <ContainerEmployee />\r\n\r\n        <Form.Provider\r\n          onFormFinish={(name, { values, forms }) => {\r\n            //console.log(name);\r\n            //console.log(values);\r\n            //console.log(forms);\r\n            const { formVacation } = forms;\r\n            const element = document.querySelector(\"span.ant-checkbox\");\r\n\r\n            if (values.tableInfo.status === \"Definido\") {\r\n              for (let i = 0; i < values.tableInfo.part; i++) {\r\n                formVacation.setFields([\r\n                  {\r\n                    name: \"dateBeginVacation0\" + (i + 1),\r\n                    value: moment(\r\n                      values.tableInfo.children[i].dateIn,\r\n                      \"DD/MM/YYYY\"\r\n                    ),\r\n                  },\r\n                  {\r\n                    name: \"daysVacation0\" + (i + 1),\r\n                    value: values.tableInfo.children[i].day,\r\n                  },\r\n                  {\r\n                    name: \"dateEndVacation0\" + (i + 1),\r\n                    value: values.tableInfo.children[i].dateEnd,\r\n                  },\r\n                ]);\r\n              }\r\n            } else if (values.tableInfo.status === \"Aberto\") {\r\n              formVacation.setFields([\r\n                {\r\n                  name: \"vacationDays\",\r\n                  value: values.tableInfo.day,\r\n                },\r\n                {\r\n                  name: \"daysVacation01\",\r\n                  value: values.tableInfo.day,\r\n                },\r\n                {\r\n                  name: \"periodEnd\",\r\n                  value: values.tableInfo.perAqEnd,\r\n                },\r\n              ]);\r\n\r\n              element.classList.remove(\"ant-checkbox-checked\");\r\n            }\r\n            formVacation.setFields([\r\n              {\r\n                name: \"dateBeginVacation01\",\r\n                value: moment(\r\n                  values.tableInfo.children[0].dateIn,\r\n                  \"DD/MM/YYYY\"\r\n                ),\r\n              },\r\n              {\r\n                name: \"periodEnd\",\r\n                value: values.tableInfo.perAqEnd,\r\n              },\r\n              {\r\n                name: \"daysVacation01\",\r\n                value: values.tableInfo.children[0].day,\r\n              },\r\n              {\r\n                name: \"dateEndVacation01\",\r\n                value: values.tableInfo.children[0].dateEnd,\r\n              },\r\n              {\r\n                name: \"dateBeginVacation02\",\r\n                value: moment(\r\n                  values.tableInfo.children[1].dateIn,\r\n                  \"DD/MM/YYYY\"\r\n                ),\r\n              },\r\n              {\r\n                name: \"daysVacation02\",\r\n                value: values.tableInfo.children[1].day,\r\n              },\r\n              {\r\n                name: \"dateEndVacation02\",\r\n                value: values.tableInfo.children[1].dateEnd,\r\n              },\r\n              {\r\n                name: \"dateBeginVacation03\",\r\n                value: moment(\r\n                  values.tableInfo.children[2].dateIn,\r\n                  \"DD/MM/YYYY\"\r\n                ),\r\n              },\r\n              {\r\n                name: \"daysVacation03\",\r\n                value: values.tableInfo.children[2].day,\r\n              },\r\n              {\r\n                name: \"dateEndVacation03\",\r\n                value: values.tableInfo.children[2].dateEnd,\r\n              },\r\n              { name: \"vacationDays\", value: values.tableInfo.day },\r\n            ]);\r\n            if (values.tableInfo.part === \"2\") {\r\n              setShowRow({\r\n                show01: false,\r\n                show02: true,\r\n              });\r\n            } else if (values.tableInfo.part === \"3\") {\r\n              setShowRow({\r\n                show01: false,\r\n                show02: false,\r\n              });\r\n            }\r\n          }}\r\n        >\r\n          <ContainerInfoVacation />\r\n          <ContainerVacation ena={showRow} set={setShowRow} />\r\n        </Form.Provider>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import ContainerIdentify from \"../containers/containersCommonFile/containerIdentify\";\r\nimport ContainerEmployee from \"../containers/containersCommonFile/containeEmployee\";\r\nimport ContainerInfoVacation from \"../containers/containersVacation/containerInfoVacation\";\r\nimport ContainerVacation from \"../containers/containersVacation/containerVacation\";\r\nimport { Form } from \"antd\";\r\nimport moment from \"moment\";\r\nimport { useState } from \"react\";\r\n\r\nexport default function FormManagerSolicitation() {\r\n  const [showRow, setShowRow] = useState({\r\n    show01: true,\r\n    show02: true,\r\n  });\r\n\r\n  const [employee, setEmployee] = useState(true);\r\n\r\n  return (\r\n    <>\r\n      <div>\r\n        <Form.Provider\r\n          onFormFinish={(name, { values, forms }) => {\r\n            //console.log(name);\r\n            //console.log(values);\r\n            //console.log(values.who);\r\n            //console.log(forms);\r\n            //const { formVacation } = forms;\r\n            if (name === \"formIdentify\" && values.who === \"employeeVacation\") {\r\n              setEmployee(false);\r\n            } else {\r\n              setEmployee(true);\r\n            }\r\n          }}\r\n        >\r\n          <ContainerIdentify own={false} />\r\n          <span hidden={employee}>\r\n            <ContainerEmployee />\r\n          </span>\r\n        </Form.Provider>\r\n        <Form.Provider\r\n          onFormFinish={(name, { values, forms }) => {\r\n            console.log(name);\r\n            console.log(values);\r\n            console.log(forms);\r\n            const { formVacation } = forms;\r\n            const element = document.querySelector(\"span.ant-checkbox\");\r\n\r\n            if (values.tableInfo.status === \"Definido\") {\r\n              for (let i = 0; i < values.tableInfo.part; i++) {\r\n                formVacation.setFields([\r\n                  {\r\n                    name: \"dateBeginVacation0\" + (i + 1),\r\n                    value: moment(\r\n                      values.tableInfo.children[i].dateIn,\r\n                      \"DD/MM/YYYY\"\r\n                    ),\r\n                  },\r\n                  {\r\n                    name: \"daysVacation0\" + (i + 1),\r\n                    value: values.tableInfo.children[i].day,\r\n                  },\r\n                  {\r\n                    name: \"dateEndVacation0\" + (i + 1),\r\n                    value: values.tableInfo.children[i].dateEnd,\r\n                  },\r\n                ]);\r\n              }\r\n            } else if (values.tableInfo.status === \"Aberto\") {\r\n              formVacation.setFields([\r\n                {\r\n                  name: \"vacationDays\",\r\n                  value: values.tableInfo.day,\r\n                },\r\n                {\r\n                  name: \"daysVacation01\",\r\n                  value: values.tableInfo.day,\r\n                },\r\n                {\r\n                  name: \"periodEnd\",\r\n                  value: values.tableInfo.perAqEnd,\r\n                },\r\n              ]);\r\n\r\n              element.classList.remove(\"ant-checkbox-checked\");\r\n            }\r\n            formVacation.setFields([\r\n              {\r\n                name: \"dateBeginVacation01\",\r\n                value: moment(\r\n                  values.tableInfo.children[0].dateIn,\r\n                  \"DD/MM/YYYY\"\r\n                ),\r\n              },\r\n              {\r\n                name: \"periodEnd\",\r\n                value: values.tableInfo.perAqEnd,\r\n              },\r\n              {\r\n                name: \"daysVacation01\",\r\n                value: values.tableInfo.children[0].day,\r\n              },\r\n              {\r\n                name: \"dateEndVacation01\",\r\n                value: values.tableInfo.children[0].dateEnd,\r\n              },\r\n              {\r\n                name: \"dateBeginVacation02\",\r\n                value: moment(\r\n                  values.tableInfo.children[1].dateIn,\r\n                  \"DD/MM/YYYY\"\r\n                ),\r\n              },\r\n              {\r\n                name: \"daysVacation02\",\r\n                value: values.tableInfo.children[1].day,\r\n              },\r\n              {\r\n                name: \"dateEndVacation02\",\r\n                value: values.tableInfo.children[1].dateEnd,\r\n              },\r\n              {\r\n                name: \"dateBeginVacation03\",\r\n                value: moment(\r\n                  values.tableInfo.children[2].dateIn,\r\n                  \"DD/MM/YYYY\"\r\n                ),\r\n              },\r\n              {\r\n                name: \"daysVacation03\",\r\n                value: values.tableInfo.children[2].day,\r\n              },\r\n              {\r\n                name: \"dateEndVacation03\",\r\n                value: values.tableInfo.children[2].dateEnd,\r\n              },\r\n              { name: \"vacationDays\", value: values.tableInfo.day },\r\n            ]);\r\n            if (values.tableInfo.part === \"2\") {\r\n              setShowRow({\r\n                show01: false,\r\n                show02: true,\r\n              });\r\n            } else if (values.tableInfo.part === \"3\") {\r\n              setShowRow({\r\n                show01: false,\r\n                show02: false,\r\n              });\r\n            }\r\n          }}\r\n        >\r\n          <ContainerInfoVacation />\r\n          <ContainerVacation ena={showRow} set={setShowRow} />\r\n        </Form.Provider>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import { Link } from \"react-router-dom\";\r\n\r\nexport default function PageLinks() {\r\n  return (\r\n    <>\r\n      <Link to=\"/SolicitacaoGestor\">Solicitação Feita Pelo Gestor</Link>\r\n      <br />\r\n      <Link to=\"/SolicitacaoPropria\">Solicitação Própria</Link>\r\n      <br />\r\n      <Link to=\"/SolicitacaoColaborador\">\r\n        Solicitação Feita para o Colaborador\r\n      </Link>\r\n      <br />\r\n      <Link to=\"/FormCompleto\">Formulário Completo</Link>\r\n      <br />\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Route, BrowserRouter, Routes, HashRouter } from \"react-router-dom\";\r\n//import FormPageMovimentation from \"../../layoutPage/FormPageMovimentation\";\r\n//import FormPageRescission from \"../../layoutPage/FormPageRescission\";\r\nimport FormPageVacation from \"../../layoutPage/FormPageVacation\";\r\nimport FormOwnSolicitation from \"../../layoutPage/FormOwnSolicitation\";\r\nimport FormEmployeeSolicitation from \"../../layoutPage/FormEmployeeSolicitation\";\r\nimport FormManagerSolicitation from \"../../layoutPage/FormManagerSolicitation\";\r\nimport PageLinks from \"../../layoutPage/PageLinks\";\r\n\r\nfunction RoutePages() {\r\n  return (\r\n    <HashRouter>\r\n      <Routes>\r\n        <Route path=\"/\" element={<PageLinks />} />\r\n        <Route path=\"/FormCompleto\" element={<FormPageVacation />} />\r\n        <Route path=\"/SolicitacaoPropria\" element={<FormOwnSolicitation />} />\r\n        <Route\r\n          path=\"/SolicitacaoGestor\"\r\n          element={<FormManagerSolicitation />}\r\n        />\r\n        <Route\r\n          path=\"/SolicitacaoColaborador\"\r\n          element={<FormEmployeeSolicitation />}\r\n        />\r\n      </Routes>\r\n    </HashRouter>\r\n  );\r\n}\r\n\r\nexport default RoutePages;\r\n","import \"./App.css\";\nimport FormPageVacation from \"./layoutPage/FormPageVacation\";\n//import FormOwnSolicitation from \"./layoutPage/FormOwnSolicitation\";\nimport RoutePages from \"./controlers/routes/routes\";\n//import PageLinks from \"./layoutPage/PageLinks\";\n//import { Link } from \"react-router-dom\";\nimport { WorkflowService } from \"./core/workflow.service\";\n\nlet nome;\nconst DataWorkflow = new WorkflowService();\n\nconst DataUser = DataWorkflow.requestUserData();\nconst Plataform = DataWorkflow.requestPlatformData().then(\n  (data) => data.serviceUrl\n);\n\nconst Variavel = DataWorkflow.requestProcessVariables();\nconst token = DataWorkflow.requestPlatformData().then((data) => data.token);\nDataUser.then((response) => {\n  nome = response.fullname;\n  //console.log(nome);\n  //console.log(typeof nome);\n});\n\n/* console.log(\"Dados Usuário 04: \");\nconsole.log(DataUser);\nconsole.log(Plataform);\nconsole.log(Variavel);\nconsole.log(token); */\n//console.log(nome);\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <RoutePages />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}