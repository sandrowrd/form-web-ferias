{"version":3,"sources":["controlers/services/queryRequest.ts","controlers/services/userRequest.ts","containers/containersCommonFile/containerIdentify.tsx","containers/containersCommonFile/containeEmployee.tsx","containers/containersVacation/containerInfoVacation.tsx","containers/containersVacation/containerVacation.tsx","containers/containersCommonFile/containerObservation.tsx","layoutPage/FormPageVacation.tsx","App.tsx","index.tsx"],"names":["QueryRequest","typeReq","url","server","module","service","port","dataSource","debug","consult","type","this","SendRequestWebService","reqType","params","mountUrl","setService","setPort","setTypeReq","headers","Headers","append","window","btoa","username","fetch","createUrlRest","mode","method","body","JSON","stringify","then","resp","Promise","res","rej","option","json","jso","status","ContainerIdentify","useState","name","value","fields","setFields","nomfun","numcad","numemp","tipcol","titred","codcar","dados","setDados","dataUserRequest","useEffect","nomccu","nomfil","supime","labelCol","span","wrapperCol","labelAlign","onFieldsChange","_","allFields","gutter","Item","label","readOnly","ContainerEmployee","Option","Select","rules","required","message","title","allowClear","showSearch","placeholder","optionFilterProp","filterOption","input","children","toLowerCase","indexOf","toLocaleLowerCase","ContainerInfoVacation","hasData","rowSelection","undefined","tableConfig","columns","dataIndex","key","render","EditOutlined","Form","useForm","form","allfields","console","log","Group","defaultValue","buttonStyle","Button","style","marginLeft","pagination","dateIn","dateEnd","day","salary13","allowence","advance","part","onRow","record","index","onClick","event","setFieldsValue","tableInfo","submit","onRowSelection","ContainerVacation","props","fieldsForm","setFieldsForm","enaRow01","enaRow02","enaRow","setEnaRow","dayVacation","textData","textDays","warningNote","description","notification","open","icon","WarningOutlined","color","background","duration","date","days","data","Date","setDate","getDate","toLocaleDateString","validatorDate","_d","dayweek","getDay","today","diff","Math","abs","getTime","ceil","timeMin","parse","refDate","parseInt","validatorDays","diffDays","set","show01","show02","onValuesChange","changeValues","allValues","getFieldsValue","validator","vacationDays","daysVacation01","xs","sm","md","lg","justify","marginBottom","placement","getFieldValue","datEnd","vacationDay","dateEndVacation01","resolve","reject","Error","format","testDate","validDate","totalDays","length","daysVacation02","datEndP1","dateEndVacation02","dateBeginVacation02","daysVacation03","dateEndVacation03","dateBeginVacation03","dateBegin02","diasP2","datEndP2","daysVac03","dataInP3","datEndP3","min","max","hidden","ena","dateBeginP3","dateBeguinVacation03","daysVac02","onChange","ContainerObservation","usu","dateTime","role","setDataSource","count","setCount","onFinish","values","Object","entries","now","toLocaleString","timeZone","newObs","toString","prev","block","htmlType","TextArea","showCount","maxLength","width","FormPageVacation","showRow","setShowRow","Provider","onFormFinish","forms","formVacation","i","moment","App","className","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.228f0030.chunk.js","sourcesContent":["export class QueryRequest {\r\n  private typeReq = 2;\r\n  private url = \"localhost:8080\";\r\n  private server = \"http://localhost:8080/\";\r\n  private module = \"rubi\";\r\n  private service = \"\";\r\n  private port = \"\";\r\n  private dataSource? = \"\";\r\n  private debug? = false;\r\n  private consult? = \"\";\r\n\r\n  public setTypeReq(type: number) {\r\n    this.typeReq = type;\r\n  }\r\n\r\n  public setUrl(url: string) {\r\n    this.url = url;\r\n  }\r\n\r\n  public setServer(server: string) {\r\n    this.server = server;\r\n  }\r\n\r\n  public setModule(module: string) {\r\n    this.module = module;\r\n  }\r\n\r\n  public setService(service: string) {\r\n    this.service = service;\r\n  }\r\n\r\n  public setPort(port: string) {\r\n    this.port = port;\r\n  }\r\n\r\n  public setDataSource(dataSource: string) {\r\n    this.dataSource = dataSource;\r\n  }\r\n\r\n  public setDebug(debug: boolean) {\r\n    this.debug = debug;\r\n  }\r\n\r\n  public setConsult(consult: string) {\r\n    this.consult = consult;\r\n  }\r\n\r\n  //1-Genérica 2-Não Genérica\r\n  public createUrlRest() {\r\n    if (this.typeReq === 1) {\r\n      return (\r\n        \"http://\" + this.url + \"/SXI/GenericConsult?consult=\" + this.consult\r\n      );\r\n    } else if (this.typeReq === 2 && this.dataSource && this.debug === true) {\r\n      return (\r\n        \"http://\" +\r\n        this.url +\r\n        \"/SXI/G5Rest?server=\" +\r\n        this.server +\r\n        \"&module=\" +\r\n        this.module +\r\n        \"&service=\" +\r\n        this.service +\r\n        \"&port=\" +\r\n        this.port +\r\n        \"&DATASOURCEATTRNAME=\" +\r\n        this.dataSource +\r\n        \"&DEBUG=true\"\r\n      );\r\n    } else if (this.typeReq === 2 && this.dataSource) {\r\n      return (\r\n        \"http://\" +\r\n        this.url +\r\n        \"/SXI/G5Rest?server=\" +\r\n        this.server +\r\n        \"&module=\" +\r\n        this.module +\r\n        \"&service=\" +\r\n        this.service +\r\n        \"&port=\" +\r\n        this.port +\r\n        \"&DATASOURCEATTRNAME=\" +\r\n        this.dataSource\r\n      );\r\n    } else\r\n      return (\r\n        \"http://\" +\r\n        this.url +\r\n        \"/SXI/G5Rest?server=\" +\r\n        this.server +\r\n        \"&module=\" +\r\n        this.module +\r\n        \"&service=\" +\r\n        this.service +\r\n        \"&port=\" +\r\n        this.port\r\n      );\r\n  }\r\n}\r\n","import { QueryRequest } from \"./queryRequest\";\r\n\r\nexport function sendRequest_old() {\r\n  const mountUrl: QueryRequest = new QueryRequest();\r\n\r\n  mountUrl.setConsult(\"consulta_solicitante_CVC\");\r\n  mountUrl.setUrl(\"localhost:8080\");\r\n  mountUrl.setTypeReq(1);\r\n\r\n  const xhttp = new XMLHttpRequest();\r\n\r\n  xhttp.open(\"GET\", mountUrl.createUrlRest(), false);\r\n  xhttp.send();\r\n  let responseArray = JSON.parse(xhttp.responseText);\r\n  //console.log(responseArray[3]);\r\n  return responseArray[1];\r\n}\r\n\r\nexport function sendRequest(reqType, service, port, params?) {\r\n  const mountUrl: QueryRequest = new QueryRequest();\r\n\r\n  const username = \"senior\";\r\n  const password = \"senior\";\r\n\r\n  mountUrl.setService(service);\r\n  mountUrl.setPort(port);\r\n  mountUrl.setTypeReq(2);\r\n\r\n  const xhttp = new XMLHttpRequest();\r\n  const param = params;\r\n\r\n  xhttp.open(reqType, mountUrl.createUrlRest(), false);\r\n  xhttp.setRequestHeader(\r\n    \"Authorization\",\r\n    \"Basic \" + window.btoa(username + \":\" + password)\r\n  );\r\n  xhttp.setRequestHeader(\"Accept\", \"application/json;charset=utf-8\");\r\n  xhttp.setRequestHeader(\"user\", \"senior\");\r\n\r\n  xhttp.send(JSON.stringify(param));\r\n  let responseArray = JSON.parse(xhttp.responseText);\r\n\r\n  //console.log(responseArray);\r\n  return responseArray;\r\n}\r\n\r\nexport function requestCauseDismissal() {\r\n  const mountUrl: QueryRequest = new QueryRequest();\r\n  mountUrl.setConsult(\"causa_demissao\");\r\n  mountUrl.setUrl(\"localhost:8080\");\r\n  mountUrl.setTypeReq(1);\r\n\r\n  const xhttp = new XMLHttpRequest();\r\n  xhttp.open(\"GET\", mountUrl.createUrlRest(), false);\r\n  xhttp.send();\r\n  let responseArray = JSON.parse(xhttp.responseText);\r\n  //console.log(responseArray);\r\n  return responseArray;\r\n}\r\n\r\nexport function sendRequestWeb() {\r\n  const mountUrl: QueryRequest = new QueryRequest();\r\n  const url =\r\n    \"http://localhost:8080/SXI/G5Rest?server=http://localhost:8080&module=rubi&service=br.com.cvc.wf.rescisao&port=GetCausaRecisao&DATASOURCEATTRNAME=CausaDemissao&DEBUG=true\";\r\n\r\n  const username = \"senior\";\r\n  const password = \"senior\";\r\n\r\n  mountUrl.setUrl(\"localhost:8080\");\r\n  mountUrl.setServer(\"http://localhost:8080/\");\r\n  mountUrl.setModule(\"rubi\");\r\n  mountUrl.setService(\"Altera.Feriado\");\r\n  mountUrl.setPort(\"TesteWeb\");\r\n\r\n  const xhttp = new XMLHttpRequest();\r\n  const param = {\r\n    tipoMens: \"Dia\",\r\n  };\r\n\r\n  xhttp.open(\"POST\", url, false);\r\n  xhttp.setRequestHeader(\r\n    \"Authorization\",\r\n    \"Basic \" + window.btoa(username + \":\" + password)\r\n  );\r\n  xhttp.setRequestHeader(\"Accept\", \"application/json;charset=utf-8\");\r\n  xhttp.setRequestHeader(\"user\", \"senior\");\r\n\r\n  xhttp.send(JSON.stringify(param));\r\n  let responseArray = JSON.parse(xhttp.responseText);\r\n\r\n  //console.log(responseArray);\r\n  return responseArray.causaDemissao;\r\n}\r\n\r\nexport function SendRequestWebService(reqType, service, port, params?) {\r\n  /* const url = \"http://localhost:8080/SXI/GenericConsult?consult=causa_demissao\";\r\n  const url2 =\r\n    \"http://localhost:8080/SXI/G5Rest?server=http://localhost:8080&module=rubi&service=br.com.cvc.wf.rescisao&port=GetCausaRecisao&DATASOURCEATTRNAME=CausaDemissao&DEBUG=true\";\r\n\r\n  const url3 =\r\n    \"http://localhost:8080/SXI/G5Rest?server=http://localhost:8080/&module=rubi&service=Altera.Feriado&port=TesteWeb\";\r\n */\r\n\r\n  const mountUrl: QueryRequest = new QueryRequest();\r\n  const username = \"senior\";\r\n  const password = \"senior\";\r\n\r\n  mountUrl.setService(service);\r\n  mountUrl.setPort(port);\r\n  mountUrl.setTypeReq(2);\r\n\r\n  let headers = new Headers();\r\n\r\n  headers.append(\"Accept\", \"application/json;charset=utf-8\");\r\n  headers.append(\r\n    \"Authorization\",\r\n    \"Basic \" + window.btoa(username + \":\" + password)\r\n  );\r\n  headers.append(\"user\", \"senior\");\r\n\r\n  let response = fetch(mountUrl.createUrlRest(), {\r\n    mode: \"cors\",\r\n    method: \"post\",\r\n    headers: headers,\r\n    body: JSON.stringify(params),\r\n  }).then((resp) => {\r\n    let promise = new Promise((res, rej) => {\r\n      let option = resp.json().then((jso) => {\r\n        return jso;\r\n      });\r\n      if (resp.status === 200) {\r\n        res(option);\r\n      } else {\r\n        rej(\"erro\");\r\n      }\r\n    });\r\n    /* Retorna o valor dentro da [PromiseResult] */\r\n    return promise;\r\n  });\r\n\r\n  //console.log(response);\r\n  return response;\r\n}\r\n","import { Input, Form, Row, Col } from \"antd\";\r\nimport \"./container.css\";\r\nimport { SendRequestWebService } from \"../../controlers/services/userRequest\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { FieldData } from \"./containerInterface\";\r\n\r\nexport let userAprover: any = {\r\n  nomfun: \"\",\r\n  numcad: \"\",\r\n  numemp: \"\",\r\n  tipcol: \"\",\r\n  titred: \"\",\r\n  codcar: \"\",\r\n};\r\n\r\nexport default function ContainerIdentify() {\r\n  const [fields, setFields] = useState<FieldData[]>([\r\n    { name: \"fullname\", value: \"\" },\r\n    { name: \"registry\", value: \"\" },\r\n    { name: \"subsidiary\", value: \"\" },\r\n    { name: \"office\", value: \"\" },\r\n    { name: \"boss\", value: \"\" },\r\n  ]);\r\n\r\n  const [dados, setDados] = useState<any>([\r\n    {\r\n      nomfun: \"\",\r\n      numcad: \"\",\r\n      numemp: \"\",\r\n      tipcol: \"\",\r\n      titred: \"\",\r\n      codcar: \"\",\r\n    },\r\n  ]);\r\n\r\n  const paramName = {\r\n    nomfun: \"\",\r\n  };\r\n\r\n  const dataUserRequest = SendRequestWebService(\r\n    \"POST\",\r\n    \"br.com.cvc.wf.rescisao\",\r\n    \"GetDadosColaborador\",\r\n    paramName\r\n  );\r\n\r\n  useEffect(() => {\r\n    dataUserRequest.then((resp: any) => {\r\n      setDados({\r\n        ...dados,\r\n        nomfun: resp.nomfun,\r\n        numcad: resp.numcad,\r\n        numemp: resp.numemp,\r\n        tipcol: resp.tipcol,\r\n        titred: resp.titred,\r\n        codcar: resp.codcar,\r\n      });\r\n      setFields([\r\n        ...fields,\r\n        { name: [\"fullname\"], value: resp.nomfun },\r\n        { name: [\"registry\"], value: resp.numcad },\r\n        { name: [\"subsidiary\"], value: resp.nomccu },\r\n        { name: [\"office\"], value: resp.nomfil },\r\n        { name: [\"boss\"], value: resp.supime },\r\n      ]);\r\n    });\r\n  }, []);\r\n\r\n  userAprover = {\r\n    nomfun: dados.nomfun,\r\n    numcad: dados.numcad,\r\n    numemp: dados.numemp,\r\n    tipcol: dados.tipcol,\r\n    titred: dados.titred,\r\n    codcar: dados.codcar,\r\n  };\r\n\r\n  //console.log(userAprover);\r\n\r\n  return (\r\n    <>\r\n      <fieldset>\r\n        <legend>Identificação do Solicitante</legend>\r\n        <Form\r\n          labelCol={{ span: 10 }}\r\n          wrapperCol={{ span: 12 }}\r\n          labelAlign=\"left\"\r\n          fields={fields}\r\n          onFieldsChange={(_, allFields) => {}}\r\n        >\r\n          <Row gutter={50}>\r\n            <Col span={12}>\r\n              <Form.Item name={\"fullname\"} label={\"Nome Solicitante\"}>\r\n                <Input readOnly />\r\n              </Form.Item>\r\n            </Col>\r\n            <Col span={12}>\r\n              <Form.Item name={\"registry\"} label={\"Matrícula\"}>\r\n                <Input readOnly />\r\n              </Form.Item>\r\n            </Col>\r\n          </Row>\r\n          <Row gutter={50}>\r\n            <Col span={12}>\r\n              <Form.Item name={\"office\"} label={\"Cargo Solicitante\"}>\r\n                <Input readOnly />\r\n              </Form.Item>\r\n            </Col>\r\n            <Col span={12}>\r\n              <Form.Item name={\"subsidiary\"} label={\"Filial\"}>\r\n                <Input readOnly />\r\n              </Form.Item>\r\n            </Col>\r\n          </Row>\r\n          <Row gutter={50}>\r\n            <Col span={12}>\r\n              <Form.Item name={\"boss\"} label={\"Superior Imediato\"}>\r\n                <Input readOnly />\r\n              </Form.Item>\r\n            </Col>\r\n            <Col span={12}>\r\n              <Form.Item></Form.Item>\r\n            </Col>\r\n          </Row>\r\n        </Form>\r\n      </fieldset>\r\n    </>\r\n  );\r\n}\r\n","import { Input, Form, Row, Col, Select, Table, Tooltip } from \"antd\";\r\nimport \"./container.css\";\r\nimport { useState } from \"react\";\r\nimport { FieldData } from \"./containerInterface\";\r\nimport { SendRequestWebService } from \"../../controlers/services/userRequest\";\r\n\r\nexport let infoColab = {\r\n  nomfun: \"\",\r\n  numcad: \"\",\r\n  numemp: \"\",\r\n  tipcol: \"\",\r\n  titred: \"\",\r\n  codcar: \"\",\r\n};\r\n\r\nexport default function ContainerEmployee() {\r\n  const [fields, setFields] = useState<FieldData[]>([\r\n    { name: [\"registryEmployee\"], value: \"\" },\r\n    { name: [\"positionemployee\"], value: \"\" },\r\n    { name: [\"subsidiaryEmployee\"], value: \"\" },\r\n    { name: [\"bossEmployee\"], value: \"\" },\r\n    { name: [\"custCenter\"], value: \"\" },\r\n  ]);\r\n\r\n  function ChooseColab(value) {\r\n    let paramNameEmp = {\r\n      nomfun: value[0].value,\r\n    };\r\n\r\n    const response = SendRequestWebService(\r\n      \"POST\",\r\n      \"br.com.cvc.wf.rescisao\",\r\n      \"GetDadosColaborador\",\r\n      paramNameEmp\r\n    );\r\n\r\n    response.then((resp: any) => {\r\n      infoColab.nomfun = resp.nomfun;\r\n      infoColab.numcad = resp.numcad;\r\n      infoColab.numemp = resp.numemp;\r\n      infoColab.tipcol = resp.tipcol;\r\n      infoColab.titred = resp.titred;\r\n      infoColab.codcar = resp.codcar;\r\n\r\n      setFields([\r\n        ...fields,\r\n        { name: [\"registryEmployee\"], value: resp.numcad },\r\n        { name: [\"positionemployee\"], value: resp.titred },\r\n        { name: [\"subsidiaryEmployee\"], value: resp.nomfil },\r\n        { name: [\"bossEmployee\"], value: resp.supime },\r\n        { name: [\"custCenter\"], value: resp.nomccu },\r\n      ]);\r\n    });\r\n\r\n    console.log(infoColab);\r\n  }\r\n\r\n  const { Option } = Select;\r\n\r\n  return (\r\n    <>\r\n      <fieldset>\r\n        <legend>Informações do Colaborador</legend>\r\n        <Form\r\n          labelCol={{ span: 10 }}\r\n          wrapperCol={{ span: 12 }}\r\n          labelAlign=\"left\"\r\n          fields={fields}\r\n          onFieldsChange={(_, allFields) => {\r\n            setFields(allFields);\r\n          }}\r\n        >\r\n          <Row gutter={20}>\r\n            <Col span={12}>\r\n              <Form.Item\r\n                name={[\"nameEmployee\"]}\r\n                label={\"Colaborador\"}\r\n                rules={[\r\n                  { required: true },\r\n                  { message: \"Obrigatório selecionar o colaborador.\" },\r\n                ]}\r\n              >\r\n                <Tooltip title=\"Selecione o nome do colaborador\">\r\n                  <Select\r\n                    allowClear\r\n                    showSearch\r\n                    placeholder=\"Selecione Colaborador\"\r\n                    optionFilterProp=\"children\"\r\n                    filterOption={(input, option) =>\r\n                      option?.children\r\n                        .toLowerCase()\r\n                        .indexOf(input.toLocaleLowerCase()) >= 0\r\n                    }\r\n                  >\r\n                    <Option value=\"Adriana Conceição\">Adriana Conceição</Option>\r\n                    <Option value=\"Roberto Mattos\">Roberto Mattos</Option>\r\n                    <Option value=\"Maria Eduarda Freitas\">\r\n                      Maria Eduarda Freitas\r\n                    </Option>\r\n                    <Option value=\"Tadeu Carvalho\">Tadeu Carvalho</Option>\r\n                  </Select>\r\n                </Tooltip>\r\n              </Form.Item>\r\n            </Col>\r\n            <Col span={12}>\r\n              <Form.Item name={[\"registryEmployee\"]} label={\"Matrícula\"}>\r\n                <Input readOnly />\r\n              </Form.Item>\r\n            </Col>\r\n          </Row>\r\n          <Row gutter={20}>\r\n            <Col span={12}>\r\n              <Form.Item\r\n                name={[\"positionemployee\"]}\r\n                label={\"Cargo Colaborador\"}\r\n              >\r\n                <Input readOnly />\r\n              </Form.Item>\r\n            </Col>\r\n            <Col span={12}>\r\n              <Form.Item name={[\"subsidiaryEmployee\"]} label={\"Filial\"}>\r\n                <Input readOnly />\r\n              </Form.Item>\r\n            </Col>\r\n          </Row>\r\n          <Row gutter={20}>\r\n            <Col span={12}>\r\n              <Form.Item name={[\"bossEmployee\"]} label={\"Superior Imediato\"}>\r\n                <Input readOnly />\r\n              </Form.Item>\r\n            </Col>\r\n            <Col span={12}>\r\n              <Form.Item name={[\"custCenter\"]} label={\"Centro de Custo\"}>\r\n                <Input readOnly />\r\n              </Form.Item>\r\n            </Col>\r\n          </Row>\r\n          <Row gutter={20}>\r\n            <Col span={12}>\r\n              <Form.Item name={[\"localWork\"]} label={\"Posto de Trabalho\"}>\r\n                <Input readOnly />\r\n              </Form.Item>\r\n            </Col>\r\n            <Col span={12}>\r\n              <Form.Item name={[\"salary\"]} label={\"Salário Atual\"}>\r\n                <Input readOnly />\r\n              </Form.Item>\r\n            </Col>\r\n          </Row>\r\n\r\n          <Row gutter={20}>\r\n            <Col span={12}>\r\n              <Form.Item name={[\"workHours\"]} label={\"Jornada de Trabalho\"}>\r\n                <Input readOnly />\r\n              </Form.Item>\r\n            </Col>\r\n            <Col span={12}>\r\n              <Form.Item></Form.Item>\r\n            </Col>\r\n          </Row>\r\n        </Form>\r\n      </fieldset>\r\n    </>\r\n  );\r\n}\r\n","import { Input, Form, Row, Col, Space, Table, Radio } from \"antd\";\r\nimport Icon, { EditOutlined, DeleteOutlined } from \"@ant-design/icons\";\r\nimport \"../containersCommonFile/container.css\";\r\nimport { useState } from \"react\";\r\nimport { FieldData } from \"../containersCommonFile/containerInterface\";\r\n\r\nexport default function ContainerInfoVacation() {\r\n  const [fields, setFields] = useState<FieldData[]>([\r\n    { name: \"who\", value: \"\" },\r\n    { name: \"tableInfo\", value: {} },\r\n  ]);\r\n\r\n  const [vacation, setVacation] = useState<any>(\"\");\r\n\r\n  interface iTable {\r\n    rowSelection?: {} | undefined;\r\n    scroll?: {} | undefined;\r\n    hasData?: boolean;\r\n    pagination?: {} | any;\r\n  }\r\n\r\n  const [tableConfig, setTableConfig] = useState<iTable>({\r\n    hasData: true,\r\n    rowSelection: undefined,\r\n  });\r\n\r\n  const data = [\r\n    {\r\n      key: 1,\r\n      status: \"Definido\",\r\n      dateIn: \"\",\r\n      dateEnd: \"\",\r\n      day: \"30\",\r\n      salary13: \"Sim\",\r\n      allowence: \"Sim\",\r\n      advance: \"Sim\",\r\n      part: \"3\",\r\n      children: [\r\n        {\r\n          key: 11,\r\n          part: \"1\",\r\n          dateIn: \"12/05/2022\",\r\n          dateEnd: \"27/05/2022\",\r\n          day: \"15\",\r\n        },\r\n        {\r\n          key: 12,\r\n          part: \"2\",\r\n          dateIn: \"11/07/2022\",\r\n          dateEnd: \"21/07/2022\",\r\n          day: \"10\",\r\n        },\r\n        {\r\n          key: 13,\r\n          part: \"3\",\r\n          dateIn: \"06/09/2022\",\r\n          dateEnd: \"11/09/2022\",\r\n          day: \"5\",\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      key: 1,\r\n      status: \"Aberto\",\r\n      dateIn: \"\",\r\n      dateEnd: \"\",\r\n      day: \"30\",\r\n      salary13: \"\",\r\n      allowence: \"\",\r\n      advance: \"\",\r\n      part: \"\",\r\n    },\r\n  ];\r\n\r\n  const columns = [\r\n    {\r\n      title: \"Situação\",\r\n      dataIndex: \"status\",\r\n      key: \"key\",\r\n    },\r\n    {\r\n      title: \"Data Inicio\",\r\n      dataIndex: \"dateIn\",\r\n      key: \"key\",\r\n    },\r\n    {\r\n      title: \"Data Fim\",\r\n      dataIndex: \"dateEnd\",\r\n      key: \"key\",\r\n    },\r\n    {\r\n      title: \"Dias\",\r\n      dataIndex: \"day\",\r\n      key: \"key\",\r\n    },\r\n    {\r\n      title: \"13 Salário\",\r\n      dataIndex: \"salary13\",\r\n      key: \"key\",\r\n    },\r\n    {\r\n      title: \"abono\",\r\n      dataIndex: \"allowence\",\r\n      key: \"key\",\r\n    },\r\n    {\r\n      title: \"Adiantamento\",\r\n      dataIndex: \"advance\",\r\n      key: \"key\",\r\n    },\r\n    {\r\n      title: \"Parcelas\",\r\n      dataIndex: \"part\",\r\n      key: \"key\",\r\n    },\r\n    {\r\n      title: \"Ação\",\r\n      key: \"action\",\r\n      render: (name) =>\r\n        name.status === \"Definido\" || name.status === \"Aberto\" ? (\r\n          <a>\r\n            <EditOutlined />\r\n          </a>\r\n        ) : (\r\n          <a></a>\r\n        ),\r\n    },\r\n  ];\r\n\r\n  const [form] = Form.useForm();\r\n\r\n  const onRowSelection = (record, index) => {\r\n    console.log(index);\r\n    console.log(record);\r\n    console.log(record.part);\r\n    form.setFieldsValue({ tableInfo: record });\r\n    form.submit();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <fieldset>\r\n        <legend>Informações de Férias</legend>\r\n        <Form\r\n          name=\"formInfoVacation\"\r\n          labelCol={{ span: 12 }}\r\n          wrapperCol={{ span: 13 }}\r\n          labelAlign=\"left\"\r\n          //fields={fields}\r\n          form={form}\r\n          onFieldsChange={(_, allfields) => {\r\n            setFields(allfields);\r\n            console.log(allfields);\r\n          }}\r\n        >\r\n          <Row gutter={20}>\r\n            <Col span={24}>\r\n              <Form.Item\r\n                name={\"who\"}\r\n                label={\"Solicitação de Férias\"}\r\n                labelAlign=\"left\"\r\n              >\r\n                <Radio.Group defaultValue=\"ownVacation\" buttonStyle=\"solid\">\r\n                  <Radio.Button value={\"ownVacation\"}>Própria</Radio.Button>\r\n                  <Radio.Button\r\n                    value={\"employeeVacation\"}\r\n                    style={{ marginLeft: \"200px\" }}\r\n                  >\r\n                    Colaborador\r\n                  </Radio.Button>\r\n                </Radio.Group>\r\n              </Form.Item>\r\n            </Col>\r\n          </Row>\r\n          <Form.Item name={\"tableInfo\"}></Form.Item>\r\n          <Space>\r\n            <Table\r\n              {...tableConfig}\r\n              pagination={false}\r\n              dataSource={data}\r\n              columns={columns}\r\n              onRow={(record, index) => {\r\n                return {\r\n                  onClick: (event) => onRowSelection(record, index),\r\n                };\r\n              }}\r\n            />\r\n          </Space>\r\n        </Form>\r\n      </fieldset>\r\n    </>\r\n  );\r\n}\r\n","import {\r\n  Input,\r\n  InputNumber,\r\n  Form,\r\n  Row,\r\n  Col,\r\n  Space,\r\n  Tooltip,\r\n  Checkbox,\r\n  DatePicker,\r\n  notification,\r\n} from \"antd\";\r\nimport { useEffect, useState } from \"react\";\r\nimport \"../containersCommonFile/container.css\";\r\nimport { FieldData } from \"../containersCommonFile/containerInterface\";\r\nimport { WarningOutlined } from \"@ant-design/icons\";\r\nimport { OmitProps } from \"antd/lib/transfer/ListBody\";\r\n\r\nlet upVacation = 30;\r\n\r\nexport default function ContainerVacation(props: any) {\r\n  const [fieldsForm, setFieldsForm] = useState<FieldData[]>([\r\n    { name: \"unexcused\", value: \"\" },\r\n    { name: \"vacationDays\", value: upVacation },\r\n    { name: \"dateBeginVacation01\", value: \"\" },\r\n    { name: \"daysVacation01\", value: upVacation },\r\n    { name: \"dateEndVacation01\", value: \"\" },\r\n    { name: \"dateBeginVacation02\", value: \"\" },\r\n    { name: \"daysVacation02\", value: \"\" },\r\n    { name: \"dateEndVacation02\", value: \"\" },\r\n    { name: \"dateBeginVacation03\", value: \"\" },\r\n    { name: \"daysVacation03\", value: \"\" },\r\n    { name: \"dateEndVacation03\", value: \"\" },\r\n  ]);\r\n\r\n  const [enaRow, setEnaRow] = useState({\r\n    enaRow01: true,\r\n    enaRow02: true,\r\n  });\r\n\r\n  const [form] = Form.useForm();\r\n  const dayVacation = fieldsForm[1].value;\r\n\r\n  const textData =\r\n    \"Informar a data de início das férias. Somente será permitido data de inicio após 60 dias da data de requisição. \";\r\n  const textDays =\r\n    \"Se parcelado, o número de dias não poderá ser menor que 5 e uma das parcelas deve ser de 14 dias\";\r\n\r\n  const warningNote = (description) => {\r\n    notification.open({\r\n      message: \"Atenção Erro no preenchimento\",\r\n      description: description,\r\n      icon: <WarningOutlined style={{ color: \"#FF0000\" }} />,\r\n      style: {\r\n        background: \"#bfcff7\",\r\n      },\r\n      duration: 0,\r\n    });\r\n  };\r\n\r\n  const dateEnd = (date, days) => {\r\n    let data = new Date(date);\r\n    //console.log(date + typeof date);\r\n    //console.log(data + typeof data);\r\n    data.setDate(data.getDate() + days);\r\n    //console.log(date);\r\n    //console.log(data);\r\n    //console.log(data.toLocaleDateString(\"en-GB\"));\r\n    return data.toLocaleDateString(\"en-GB\");\r\n  };\r\n\r\n  function validatorDate(value, name) {\r\n    if (value === \"\") {\r\n      return false;\r\n    } else {\r\n      console.log(value._d);\r\n\r\n      //console.log(value._d.getDay());\r\n      const dayweek = value._d.getDay();\r\n\r\n      if (dayweek === 0) {\r\n        const aviso =\r\n          \"Dia de inicio da férias cai no domingo. Data não permitida. Favor corrigir\";\r\n        warningNote(aviso);\r\n      } else if (dayweek === 6) {\r\n        const aviso =\r\n          \"Dia de inicio da férias cai no sábado. Data não permitida. Favor corrigir\";\r\n        warningNote(aviso);\r\n      }\r\n      if (value) {\r\n        const data = new Date(value._d);\r\n        const today = new Date();\r\n        let diff = Math.abs(data.getTime() - today.getTime());\r\n        let dias = Math.ceil(diff / (1000 * 60 * 60 * 24));\r\n        //console.log(dias);\r\n        if (dias < 60) {\r\n          const aviso =\r\n            \"Não é permitido escolher data abaixo de 60 dias após a data de requisição. Por favor verifique o preenchimento\";\r\n\r\n          warningNote(aviso);\r\n          return false;\r\n        } else if (name === \"dateBeginVacation02\") {\r\n          const timeMin = Date.parse(fieldsForm[2].value._d);\r\n          let refDate = new Date(timeMin);\r\n\r\n          refDate.setDate(refDate.getDate() + parseInt(fieldsForm[3].value));\r\n          console.log(refDate);\r\n          console.log(data);\r\n          if (data < refDate && data.getDate() < refDate.getDate()) {\r\n            const aviso =\r\n              \"Data não pode ser inferior ou igual a data da primeira parcela. Favor selecionar uma data deferente da primeira parcela \";\r\n            warningNote(aviso);\r\n\r\n            return false;\r\n          } else {\r\n            return true;\r\n          }\r\n        } else if (name === \"dateBeginVacation03\") {\r\n          const timeMin = Date.parse(fieldsForm[5].value._d);\r\n          let refDate = new Date(timeMin);\r\n          refDate.setDate(refDate.getDate() + parseInt(fieldsForm[6].value));\r\n          console.log(refDate);\r\n          if (data < refDate && data.getDate() < refDate.getDate()) {\r\n            const aviso =\r\n              \"Data não pode ser inferior ou igual a data da primeira parcela. Favor selecionar uma data com diferença de no mínimo 30 dias \";\r\n            warningNote(aviso);\r\n\r\n            return false;\r\n          } else {\r\n            return true;\r\n          }\r\n        } else {\r\n          return true;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  const validatorDays = (value, name) => {\r\n    let diffDays = 0;\r\n    console.log(value);\r\n\r\n    props.set({\r\n      show01: true,\r\n      show02: true,\r\n    });\r\n\r\n    if (name === \"daysVacation01\") {\r\n      diffDays = dayVacation - value;\r\n      //console.log(fieldsForm[4].value);\r\n      console.log(diffDays);\r\n\r\n      if (\r\n        (value >= 14 || diffDays >= 14) &&\r\n        value <= dayVacation - 5 &&\r\n        value >= 5\r\n      ) {\r\n        setEnaRow({\r\n          enaRow01: false,\r\n          enaRow02: true,\r\n        });\r\n        return diffDays;\r\n      } else if (\r\n        fieldsForm[4].value < 5 ||\r\n        fieldsForm[4].value === undefined ||\r\n        diffDays < 5\r\n      ) {\r\n        setEnaRow({\r\n          enaRow01: true,\r\n          enaRow02: true,\r\n        });\r\n      }\r\n    } else if (name === \"daysVacation02\") {\r\n      diffDays = dayVacation - fieldsForm[3].value - value;\r\n      console.log(diffDays < 5);\r\n      console.log(value);\r\n      console.log(diffDays);\r\n      console.log(dayVacation);\r\n      console.log(fieldsForm[9].value);\r\n      console.log(dayVacation - fieldsForm[3].value);\r\n      if (diffDays < 5) {\r\n        setEnaRow({\r\n          enaRow01: false,\r\n          enaRow02: true,\r\n        });\r\n      } else if (\r\n        value >= 14 ||\r\n        diffDays === 14 ||\r\n        (value >= 5 && value <= dayVacation - fieldsForm[3].value - 5)\r\n      ) {\r\n        console.log(dayVacation - fieldsForm[3].value - 5);\r\n        setEnaRow({\r\n          enaRow01: false,\r\n          enaRow02: false,\r\n        });\r\n      }\r\n    } else {\r\n      setEnaRow({\r\n        enaRow01: true,\r\n        enaRow02: true,\r\n      });\r\n    }\r\n    return diffDays;\r\n  };\r\n\r\n  const handleDayVacation = (value) => {\r\n    console.log(value);\r\n    const testDate = form.getFieldValue(\"dateBeginVacation01\");\r\n    console.log(JSON.stringify(fieldsForm[6].name) === '[\"daysVacation02\"]');\r\n\r\n    const validDate = validatorDate(testDate, \"dateBeginVacation01\");\r\n    const diffDays = validatorDays(value, \"daysVacation01\");\r\n    const datEnd = dateEnd(Date.parse(testDate._d), value);\r\n    console.log(diffDays);\r\n    console.log(datEnd);\r\n\r\n    /* setFieldsForm((prev: any) => ({\r\n      ...prev,\r\n      [\"daysVacation02\"]: diffDays,\r\n    })); */\r\n  };\r\n\r\n  const handleInput01 = (value) => {\r\n    console.log(value);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <fieldset>\r\n        <legend>Seleção de Férias</legend>\r\n        <Form\r\n          name=\"formVacation\"\r\n          labelCol={{ span: 9 }}\r\n          wrapperCol={{ span: 12 }}\r\n          labelAlign=\"left\"\r\n          fields={fieldsForm}\r\n          form={form}\r\n          onFieldsChange={(_, allfields) => {\r\n            //changeFields(allfields);\r\n            setFieldsForm(allfields);\r\n            console.log(fieldsForm);\r\n          }}\r\n          onValuesChange={(changeValues, allValues) => {\r\n            //console.log(changeValues);\r\n            //console.log(allValues);\r\n          }}\r\n        >\r\n          <div>\r\n            <Row gutter={15}>\r\n              <Col span={10}>\r\n                <Form.Item\r\n                  name={\"unexcused\"}\r\n                  label={\"Faltas não justificadas\"}\r\n                  labelAlign=\"left\"\r\n                  labelCol={{ span: 14 }}\r\n                  wrapperCol={{ span: 7 }}\r\n                  rules={[\r\n                    ({ getFieldsValue, setFieldsValue }) => ({\r\n                      validator(_, value) {\r\n                        console.log(value);\r\n                        console.log(value);\r\n                        if (value <= 5) {\r\n                          form.setFieldsValue({\r\n                            vacationDays: 30,\r\n                            daysVacation01: 30,\r\n                          });\r\n                        } else if (value > 5 && value <= 14) {\r\n                          form.setFieldsValue({\r\n                            vacationDays: 24,\r\n                            daysVacation01: 24,\r\n                          });\r\n                        } else if (value > 14 && value <= 23) {\r\n                          form.setFieldsValue({\r\n                            vacationDays: 18,\r\n                            daysVacation01: 18,\r\n                          });\r\n                        } else if (value > 23 && value <= 32) {\r\n                          form.setFieldsValue({\r\n                            vacationDays: 12,\r\n                            daysVacation01: 12,\r\n                          });\r\n                        } else {\r\n                          form.setFieldsValue({\r\n                            vacationDays: 0,\r\n                            daysVacation01: 0,\r\n                          });\r\n                        }\r\n                      },\r\n                    }),\r\n                  ]}\r\n                >\r\n                  <Input /* onChange={handleVacationDays} */ />\r\n                </Form.Item>\r\n              </Col>\r\n              <Col span={14}>\r\n                <Form.Item\r\n                  name={\"vacationDays\"}\r\n                  label={\"Dias Aquisitivos de Férias\"}\r\n                  labelAlign=\"right\"\r\n                  labelCol={{ span: 16 }}\r\n                  wrapperCol={{ span: 5 }}\r\n                >\r\n                  <Input />\r\n                </Form.Item>\r\n              </Col>\r\n            </Row>\r\n\r\n            <Row\r\n              gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}\r\n              justify=\"space-around\"\r\n              style={{ marginBottom: \"50px\" }}\r\n            >\r\n              <Checkbox value=\"checkAllowance\">Abono</Checkbox>\r\n              <Checkbox value=\"checkSalary13\">13 Salário</Checkbox>\r\n              <Checkbox value=\"checkAdvance\">Adiantamento</Checkbox>\r\n            </Row>\r\n            <Row gutter={12} justify=\"space-around\">\r\n              <Tooltip placement=\"top\" title={textData}>\r\n                <Form.Item\r\n                  label={\"Data Início\"}\r\n                  name={\"dateBeginVacation01\"}\r\n                  rules={[\r\n                    {\r\n                      required: true,\r\n                      message:\r\n                        \"Obrigatório informar a data de inicio das férias.\",\r\n                    },\r\n                    ({ getFieldValue, setFieldsValue }) => ({\r\n                      validator(_, value) {\r\n                        const validDate = validatorDate(\r\n                          value,\r\n                          \"dateBeginVacation01\"\r\n                        );\r\n                        let datEnd = \"\";\r\n                        //console.log(validDate);\r\n                        if (validDate) {\r\n                          const vacationDay = getFieldValue(\"daysVacation01\");\r\n                          //console.log(vacationDay);\r\n                          if (vacationDay) {\r\n                            datEnd = dateEnd(Date.parse(value._d), vacationDay);\r\n                          }\r\n                          console.log(datEnd);\r\n                          setFieldsValue({\r\n                            dateEndVacation01: datEnd,\r\n                          });\r\n                          return Promise.resolve(\r\n                            setFieldsValue({\r\n                              dateEndVacation01: datEnd,\r\n                            })\r\n                          );\r\n                        } else {\r\n                          return Promise.reject(\r\n                            new Error(\r\n                              \"Data negada. Favor digitar uma data correta\"\r\n                            )\r\n                          );\r\n                        }\r\n                      },\r\n                    }),\r\n                  ]}\r\n                >\r\n                  <DatePicker allowClear format=\"DD/MM/YYYY\" />\r\n                </Form.Item>\r\n              </Tooltip>\r\n\r\n              <Tooltip placement=\"top\" title={textDays}>\r\n                <Form.Item\r\n                  label={\"Qto Dias\"}\r\n                  name={\"daysVacation01\"}\r\n                  rules={[\r\n                    {\r\n                      required: true,\r\n                      message: \"Favor informar o número de dias de férias.\",\r\n                    },\r\n\r\n                    ({ getFieldValue, setFieldsValue, setFields }) => ({\r\n                      validator(_, value) {\r\n                        const testDate = getFieldValue(\"dateBeginVacation01\");\r\n                        console.log(value);\r\n                        const validDate = validatorDate(\r\n                          testDate,\r\n                          \"dateBeginVacation01\"\r\n                        );\r\n                        const totalDays = getFieldValue(\"vacationDays\");\r\n\r\n                        if (testDate.length === 0) {\r\n                          //console.log(\"teste data01 vazio\");\r\n                          setFields([\r\n                            {\r\n                              name: \"daysVacation01\",\r\n                              value: totalDays,\r\n                            },\r\n                          ]);\r\n                          return Promise.reject(\r\n                            new Error(\r\n                              \"Favor primeiro selecionar a data de inicio das férias corretamente.\"\r\n                            )\r\n                          );\r\n                        } else if (totalDays < 19) {\r\n                          const aviso =\r\n                            \"Numero de dias de férias insuficientes para parcelar férias. Valor será em cota única \";\r\n                          warningNote(aviso);\r\n                          setFieldsValue({\r\n                            daysVacation01: totalDays,\r\n                          });\r\n                          return Promise.reject(\r\n                            new Error(\"Não é permitido parcelar\")\r\n                          );\r\n                        } else if (getFieldValue(\"daysVacation02\") < 6) {\r\n                          setFieldsValue({\r\n                            daysVacation01: fieldsForm[3].value - 1,\r\n                            daysVacation02: 5,\r\n                          });\r\n                          const aviso =\r\n                            \"A segunda parcela não pode ser menor que 5 \";\r\n                          warningNote(aviso);\r\n                          return Promise.reject();\r\n                        } else {\r\n                          if (validDate) {\r\n                            if (value < totalDays && value > totalDays - 2) {\r\n                              const datEndP1 = dateEnd(\r\n                                Date.parse(testDate._d),\r\n                                totalDays - 5\r\n                              );\r\n                              console.log(\"inicio\");\r\n                              const diffDays = validatorDays(\r\n                                totalDays - 5,\r\n                                \"daysVacation01\"\r\n                              );\r\n\r\n                              setFieldsValue({\r\n                                daysVacation01: totalDays - 5,\r\n                                dateEndVacation01: datEndP1,\r\n                                daysVacation02: diffDays,\r\n                                dateEndVacation02: \"\",\r\n                                dateBeginVacation02: \"\",\r\n                                daysVacation03: \"\",\r\n                                dateEndVacation03: \"\",\r\n                                dateBeginVacation03: \"\",\r\n                              });\r\n\r\n                              /* Se P2 e P3 igual 5 não permite que P1 aceite incrementar até 30 */\r\n                            } else if (\r\n                              getFieldValue(\"daysVacation02\") < 6 &&\r\n                              getFieldValue(\"daysVacation01\") >=\r\n                                getFieldValue(\"vacationDays\") - 10 &&\r\n                              getFieldValue(\"daysVacation03\") === 5\r\n                            ) {\r\n                              console.log(\r\n                                \"Erro: Se P2 e P3 igual 5 não permite que P1 aceite incrementar até 30 \"\r\n                              );\r\n                              return Promise.reject(\r\n                                new Error(\"Máximo valor permitido\")\r\n                              );\r\n                              /* Se P3=0 e P2<5 e P1>25  */\r\n                            } else if (\r\n                              getFieldValue(\"daysVacation02\") <= 5 &&\r\n                              getFieldValue(\"daysVacation01\") > totalDays - 6\r\n                            ) {\r\n                              const datEndP1 = dateEnd(\r\n                                Date.parse(testDate._d),\r\n                                totalDays\r\n                              );\r\n                              console.log(\"P3=0 P2<5 P1>total - 5\");\r\n\r\n                              setFieldsValue({\r\n                                daysVacation01: totalDays,\r\n                                dateEndVacation01: datEndP1,\r\n                                daysVacation02: \"\",\r\n                                dateEndVacation02: \"\",\r\n                                dateBeginVacation02: \"\",\r\n                              });\r\n\r\n                              validatorDays(value, \"daysVacation01\");\r\n                            } else {\r\n                              console.log(value);\r\n\r\n                              const datEndP1 = dateEnd(\r\n                                Date.parse(testDate._d),\r\n                                value\r\n                              );\r\n\r\n                              console.log(datEndP1);\r\n                              /* dataInP2=\"\" e diasP2=0 */\r\n                              if (\r\n                                getFieldValue(\"dateBeginVacation02\") === \"\" &&\r\n                                getFieldValue(\"daysVacation02\") === \"\"\r\n                              ) {\r\n                                console.log(\"dataInP2 e diasp2 vazios \");\r\n\r\n                                const diffDays = validatorDays(\r\n                                  value,\r\n                                  \"daysVacation01\"\r\n                                );\r\n\r\n                                setFieldsValue({\r\n                                  dateEndVacation01: datEndP1,\r\n                                  daysVacation02: diffDays,\r\n                                  dateEndVacation02: \"\",\r\n                                  dateBeginVacation02: \"\",\r\n                                  daysVacation03: \"\",\r\n                                  dateEndVacation03: \"\",\r\n                                  dateBeginVacation03: \"\",\r\n                                });\r\n                              } else if (\r\n                                getFieldValue(\"daysVacation02\") !== \"\"\r\n                              ) {\r\n                                console.log(\"Regra da parcela2\");\r\n                                const dateBegin02 = getFieldValue(\r\n                                  \"dateBeginVacation02\"\r\n                                );\r\n                                const diasP2 =\r\n                                  totalDays -\r\n                                  getFieldValue(\"daysVacation01\") -\r\n                                  getFieldValue(\"daysVacation03\");\r\n                                /* Existe data parcela 2 */\r\n                                if (dateBegin02 !== \"\") {\r\n                                  const datEndP2 = dateEnd(\r\n                                    Date.parse(dateBegin02._d),\r\n                                    value\r\n                                  );\r\n                                  /* Existe data parcela 2 e diasP3*/\r\n                                  if (getFieldValue(\"daysVacation03\") !== \"\") {\r\n                                    console.log(\"Regra da parcela3\");\r\n                                    const daysVac03 =\r\n                                      getFieldValue(\"daysVacation03\");\r\n\r\n                                    const dataInP3 =\r\n                                      getFieldValue(\"dateBeginVacation03\") !==\r\n                                      \"\"\r\n                                        ? getFieldValue(\"dateBeginVacation03\")\r\n                                        : \"\";\r\n\r\n                                    /* Existe dataP2 e dataP3 */\r\n                                    if (dataInP3 !== \"\") {\r\n                                      console.log(\"dataInP3 com valor\");\r\n                                      const datEndP3 = dateEnd(\r\n                                        Date.parse(dataInP3._d),\r\n                                        daysVac03\r\n                                      );\r\n\r\n                                      setFieldsValue({\r\n                                        dateEndVacation01: datEndP1,\r\n                                        daysVacation02: diasP2,\r\n                                        dateEndVacation02: datEndP2,\r\n                                        dateBeginVacation02: dateBegin02,\r\n                                        daysVacation03: daysVac03,\r\n                                        dateEndVacation03: datEndP3,\r\n                                        dateBeginVacation03: dataInP3,\r\n                                      });\r\n                                    } else {\r\n                                      console.log(\"dataInP3 vazio\");\r\n                                      setFieldsValue({\r\n                                        dateEndVacation01: datEndP1,\r\n                                        daysVacation02: diasP2,\r\n                                        dateEndVacation02: datEndP2,\r\n                                        dateBeginVacation02: dateBegin02,\r\n                                        daysVacation03: daysVac03,\r\n                                        dateEndVacation03: \"\",\r\n                                        dateBeginVacation03: \"\",\r\n                                      });\r\n                                      validatorDays(diasP2, \"daysVacation02\");\r\n                                    }\r\n                                    /* Existe data parcela 2 e diasP3=0 */\r\n                                  } else if (\r\n                                    getFieldValue(\"daysVacation03\") === \"\"\r\n                                  ) {\r\n                                    console.log(\"diasP3 vazio \");\r\n                                    setFieldsValue({\r\n                                      dateEndVacation01: datEndP1,\r\n                                      daysVacation02: diasP2,\r\n                                      dateEndVacation02: datEndP2,\r\n                                      dateBeginVacation02: dateBegin02,\r\n                                      daysVacation03: \"\",\r\n                                      dateEndVacation03: \"\",\r\n                                      dateBeginVacation03: \"\",\r\n                                    });\r\n                                  }\r\n                                  /* Sem dataP2 */\r\n                                } else {\r\n                                  console.log(\r\n                                    \"dataInP2 vazio e diasP2 com valor \"\r\n                                  );\r\n                                  const diffDays = validatorDays(\r\n                                    value,\r\n                                    \"daysVacation01\"\r\n                                  );\r\n                                  console.log(value);\r\n                                  console.log(diffDays);\r\n                                  setFieldsValue({\r\n                                    dateEndVacation01: datEndP1,\r\n                                    daysVacation02: diffDays,\r\n                                    dateEndVacation02: \"\",\r\n                                    dateBeginVacation02: \"\",\r\n                                    daysVacation03: \"\",\r\n                                    dateEndVacation03: \"\",\r\n                                    dateBeginVacation03: \"\",\r\n                                  });\r\n                                }\r\n\r\n                                return Promise.resolve();\r\n                              }\r\n                            }\r\n                          } else {\r\n                            return Promise.reject(\r\n                              new Error(\"Data está invalida. Favor corrigir\")\r\n                            );\r\n                          }\r\n                        }\r\n                      },\r\n                    }),\r\n                  ]}\r\n                >\r\n                  <InputNumber\r\n                    min={5}\r\n                    max={\r\n                      form.getFieldValue(\"daysVacation02\") < 6 &&\r\n                      form.getFieldValue(\"daysVacation03\") === 5\r\n                        ? form.getFieldValue(\"vacationDays\") -\r\n                          form.getFieldValue(\"daysVacation02\") -\r\n                          form.getFieldValue(\"daysVacation03\")\r\n                        : form.getFieldValue(\"vacationDays\")\r\n                    }\r\n\r\n                    //defaultValue={10}\r\n                  />\r\n                </Form.Item>\r\n              </Tooltip>\r\n              <Form.Item label={\"Data Fim\"} name={\"dateEndVacation01\"}>\r\n                <Input readOnly />\r\n              </Form.Item>\r\n            </Row>\r\n          </div>\r\n          <div hidden={!enaRow.enaRow01 || !props.ena.show01 ? false : true}>\r\n            <Row gutter={12} justify=\"space-around\">\r\n              <Tooltip placement=\"top\" title={textData}>\r\n                <Form.Item\r\n                  label={\"Data Início\"}\r\n                  name={\"dateBeginVacation02\"}\r\n                  rules={[\r\n                    {\r\n                      required: true,\r\n                      message:\r\n                        \"Obrigatório informar a data de inicio das férias.\",\r\n                    },\r\n                    ({ getFieldValue, setFieldsValue }) => ({\r\n                      validator(_, value) {\r\n                        const validDate = validatorDate(\r\n                          value,\r\n                          \"dateBeginVacation02\"\r\n                        );\r\n\r\n                        let datEnd = \"\";\r\n                        //console.log(validDate);\r\n                        if (\r\n                          getFieldValue(\"daysVacation01\") < 14 &&\r\n                          getFieldValue(\"daysVacation02\") < 14 &&\r\n                          getFieldValue(\"daysVacation03\") < 14\r\n                        ) {\r\n                          const aviso =\r\n                            \"Uma das parcela tem que maior ou igual a 14 dias. Favor corrigir \";\r\n                          warningNote(aviso);\r\n                          return Promise.reject(\r\n                            new Error(\"Parcelas não permitidas\")\r\n                          );\r\n                        } else {\r\n                          if (validDate) {\r\n                            const vacationDay = getFieldValue(\"daysVacation02\");\r\n                            //console.log(vacationDay);\r\n                            if (vacationDay) {\r\n                              datEnd = dateEnd(\r\n                                Date.parse(value._d),\r\n                                vacationDay\r\n                              );\r\n                            }\r\n                            setFieldsValue({\r\n                              dateEndVacation02: datEnd,\r\n                            });\r\n                            return Promise.resolve(\r\n                              setFieldsValue({\r\n                                dateEndVacation02: datEnd,\r\n                              })\r\n                            );\r\n                          } else {\r\n                            return Promise.reject(\r\n                              new Error(\r\n                                \"Data negada. Favor digitar uma data correta\"\r\n                              )\r\n                            );\r\n                          }\r\n                        }\r\n                      },\r\n                    }),\r\n                  ]}\r\n                >\r\n                  <DatePicker allowClear format=\"DD/MM/YYYY\" />\r\n                </Form.Item>\r\n              </Tooltip>\r\n              <Tooltip placement=\"top\" title={textDays}>\r\n                <Form.Item\r\n                  label={\"Qto Dias\"}\r\n                  name={\"daysVacation02\"}\r\n                  rules={[\r\n                    {\r\n                      required: true,\r\n                      message: \"Favor informar o número de dias de férias.\",\r\n                    },\r\n\r\n                    ({ getFieldValue, setFieldsValue, setFields }) => ({\r\n                      validator(_, value) {\r\n                        console.log(value);\r\n                        //console.log(getFieldValue(\"daysVacation02\"));\r\n\r\n                        //checkDays(value, \"daysVacation01\");\r\n                        //setFieldsValue({ daysVacation02: daysVac02 });\r\n                        const testDate = getFieldValue(\"dateBeginVacation02\");\r\n                        //console.log(testDate);\r\n                        const validDate = validatorDate(\r\n                          testDate,\r\n                          \"dateBeginVacation02\"\r\n                        );\r\n                        const totalDays = getFieldValue(\"vacationDays\");\r\n                        /* console.log(\r\n                          getFieldValue(\"daysVacation01\") < 14 &&\r\n                            value < 14 &&\r\n                            value + getFieldValue(\"daysVacation03\") < 16\r\n                        );\r\n                        console.log(\r\n                          getFieldValue(\"daysVacation03\") < 14 &&\r\n                            value + getFieldValue(\"daysVacation01\") < 16\r\n                        );\r\n                        console.log(\r\n                          value < 14 &&\r\n                            getFieldValue(\"daysVacation01\") < 14 &&\r\n                            getFieldValue(\"daysVacation01\") +\r\n                              getFieldValue(\"daysVacation03\") <\r\n                              16\r\n                        );\r\n                        console.log(testDate._d);\r\n                        console.log(validDate); */\r\n\r\n                        if (totalDays < 25) {\r\n                          const aviso =\r\n                            \"Numero de dias de férias insuficientes para parcelar as férias em 3 vezes. \";\r\n                          warningNote(aviso);\r\n                          setFieldsValue({\r\n                            daysVacation02:\r\n                              totalDays - getFieldValue(\"daysVacation01\"),\r\n                          });\r\n                          return Promise.reject(\r\n                            new Error(\"Não é permitido parcelar\")\r\n                          );\r\n                        } else {\r\n                          if (testDate._d) {\r\n                            if (validDate) {\r\n                              if (\r\n                                value <=\r\n                                  totalDays - getFieldValue(\"daysVacation01\") &&\r\n                                value >=\r\n                                  totalDays -\r\n                                    getFieldValue(\"daysVacation01\") -\r\n                                    2\r\n                              ) {\r\n                                console.log(\"inicio parcela 2\");\r\n\r\n                                const datEndP2 = dateEnd(\r\n                                  Date.parse(testDate._d),\r\n                                  value - 4\r\n                                );\r\n\r\n                                setFields([\r\n                                  { name: \"daysVacation02\", value: value - 4 },\r\n                                  {\r\n                                    name: \"dateEndVacation02\",\r\n                                    value: datEndP2,\r\n                                  },\r\n                                  { name: \"dateBeginVacation03\", value: \"\" },\r\n                                  { name: \"daysVacation03\", value: 5 },\r\n                                  { name: \"dateEndVacation03\", value: \"\" },\r\n                                ]);\r\n\r\n                                validatorDays(value - 4, \"daysVacation02\");\r\n                                /* caso reduza valor P3<5 e P2 aumenta */\r\n                              } else if (\r\n                                getFieldValue(\"daysVacation03\") < 6 &&\r\n                                getFieldValue(\"daysVacation02\") >\r\n                                  totalDays -\r\n                                    getFieldValue(\"daysVacation01\") -\r\n                                    5\r\n                              ) {\r\n                                console.log(\"daysVacation03 menor que 5\");\r\n                                const daysVac02 =\r\n                                  getFieldValue(\"vacationDays\") -\r\n                                  getFieldValue(\"daysVacation01\");\r\n                                console.log(daysVac02);\r\n\r\n                                const datEndP2 = dateEnd(\r\n                                  Date.parse(testDate._d),\r\n                                  daysVac02\r\n                                );\r\n\r\n                                setFieldsValue({\r\n                                  daysVacation02: daysVac02,\r\n                                  dateEndVacation02: datEndP2,\r\n                                  daysVacation03: \"\",\r\n                                  dateEndVacation03: \"\",\r\n                                  dateBeguinVacation03: \"\",\r\n                                });\r\n\r\n                                validatorDays(daysVac02, \"daysVacation02\");\r\n\r\n                                /* const diffDays = validatorDays(\r\n                              value,\r\n                              \"daysVacation02\"\r\n                            ); */\r\n                                /*Erro diasP2 e diasP3 < 6  */\r\n                              } else if (\r\n                                getFieldValue(\"daysVacation02\") < 6 &&\r\n                                getFieldValue(\"daysVacation03\") < 6\r\n                              ) {\r\n                                console.log(\"Erro diasP2 e diasP3 < 6\");\r\n                                return Promise.reject();\r\n                                /*Se ok  */\r\n                              } else {\r\n                                console.log(\"Se ok\");\r\n                                const diffDays = validatorDays(\r\n                                  value,\r\n                                  \"daysVacation02\"\r\n                                );\r\n                                const datEndP2 = dateEnd(\r\n                                  Date.parse(testDate._d),\r\n                                  value\r\n                                );\r\n                                console.log(datEndP2);\r\n                                console.log(diffDays);\r\n\r\n                                const dateBeginP3 = getFieldValue(\r\n                                  \"dateBeguinVacation03\"\r\n                                );\r\n                                console.log(dateBeginP3);\r\n                                console.log(fieldsForm[8]);\r\n                                /* Com o valor da data de inicio */\r\n                                if (fieldsForm[8].value === \"\" || undefined) {\r\n                                  console.log(\"Sem dataInP3\");\r\n                                  setFieldsValue({\r\n                                    dateEndVacation02: datEndP2,\r\n                                    daysVacation03: diffDays,\r\n                                    dateEndVacation03: \"\",\r\n                                    dateBeguinVacation03: \"\",\r\n                                  });\r\n                                } else {\r\n                                  console.log(\"Com dataInP3\");\r\n                                  const datEndP3 = dateEnd(\r\n                                    Date.parse(fieldsForm[8].value._d),\r\n                                    diffDays\r\n                                  );\r\n\r\n                                  setFieldsValue({\r\n                                    dateEndVacation02: datEndP2,\r\n                                    daysVacation03: diffDays,\r\n                                    dateEndVacation03: datEndP3,\r\n                                  });\r\n                                }\r\n\r\n                                return Promise.resolve();\r\n                              }\r\n                            } else {\r\n                              return Promise.reject(\r\n                                new Error(\"Data está invalida. Favor corrigir\")\r\n                              );\r\n                            }\r\n                          } else {\r\n                            return Promise.reject(\r\n                              new Error(\r\n                                \"Favor primeiro selecionar a data de inicio das férias corretamente.\"\r\n                              )\r\n                            );\r\n                          }\r\n                        }\r\n                      },\r\n                    }),\r\n                  ]}\r\n                >\r\n                  <InputNumber\r\n                    min={5}\r\n                    max={\r\n                      form.getFieldValue(\"vacationDays\") -\r\n                      form.getFieldValue(\"daysVacation01\")\r\n                    }\r\n                    onChange={handleInput01}\r\n                  />\r\n                </Form.Item>\r\n              </Tooltip>\r\n              <Form.Item label={\"Data Fim\"} name={\"dateEndVacation02\"}>\r\n                <Input readOnly />\r\n              </Form.Item>\r\n            </Row>\r\n          </div>\r\n          <div hidden={!enaRow.enaRow02 || !props.ena.show02 ? false : true}>\r\n            <Row gutter={12} justify=\"space-around\">\r\n              <Tooltip placement=\"top\" title={textData}>\r\n                <Form.Item\r\n                  label={\"Data Início\"}\r\n                  name={\"dateBeginVacation03\"}\r\n                  rules={[\r\n                    {\r\n                      required: true,\r\n                      message:\r\n                        \"Obrigatório informar a data de inicio das férias.\",\r\n                    },\r\n                    ({ getFieldValue, setFieldsValue }) => ({\r\n                      validator(_, value) {\r\n                        const validDate = validatorDate(\r\n                          value,\r\n                          \"dateBeginVacation03\"\r\n                        );\r\n                        let datEnd = \"\";\r\n                        //console.log(validDate);\r\n                        if (\r\n                          getFieldValue(\"daysVacation01\") < 14 &&\r\n                          getFieldValue(\"daysVacation02\") < 14 &&\r\n                          getFieldValue(\"daysVacation03\") < 14\r\n                        ) {\r\n                          const aviso =\r\n                            \"Uma das parcela tem que maior ou igual a 14 dias. Favor corrigir \";\r\n                          warningNote(aviso);\r\n                          return Promise.reject(\r\n                            new Error(\"Parcelas não permitidas\")\r\n                          );\r\n                        } else {\r\n                          if (validDate) {\r\n                            const vacationDay = getFieldValue(\"daysVacation03\");\r\n                            console.log(vacationDay);\r\n                            if (vacationDay) {\r\n                              datEnd = dateEnd(\r\n                                Date.parse(value._d),\r\n                                vacationDay\r\n                              );\r\n                            }\r\n                            console.log(datEnd);\r\n\r\n                            setFieldsValue({\r\n                              dateEndVacation03: datEnd,\r\n                            });\r\n                            return Promise.resolve(\r\n                              setFieldsValue({\r\n                                dateEndVacation03: datEnd,\r\n                              })\r\n                            );\r\n                          } else {\r\n                            return Promise.reject(\r\n                              new Error(\r\n                                \"Data negada. Favor digitar uma data correta\"\r\n                              )\r\n                            );\r\n                          }\r\n                        }\r\n                      },\r\n                    }),\r\n                  ]}\r\n                >\r\n                  <DatePicker allowClear format=\"DD/MM/YYYY\" />\r\n                </Form.Item>\r\n              </Tooltip>\r\n              <Form.Item label={\"Qto Dias\"} name={\"daysVacation03\"}>\r\n                <InputNumber readOnly />\r\n              </Form.Item>\r\n              <Form.Item label={\"Data Fim\"} name={\"dateEndVacation03\"}>\r\n                <Input readOnly />\r\n              </Form.Item>\r\n            </Row>\r\n          </div>\r\n        </Form>\r\n      </fieldset>\r\n    </>\r\n  );\r\n}\r\n","import { Input, Form, Table, Button, Row, Col, Tooltip } from \"antd\";\r\nimport \"./container.css\";\r\nimport { useState } from \"react\";\r\nimport { FieldData } from \"./containerInterface\";\r\nimport { userAprover } from \"./containerIdentify\";\r\nimport { infoColab } from \"./containeEmployee\";\r\n//import { sendRequest } from \"../controlers/services/userRequest\";\r\n\r\n/* const onFinish = (value) => {\r\n  let today = new Date();\r\n\r\n    let paramNameEmp = {\r\n    nomapr: userAprover.nomfun,\r\n    nomafa: infoColab.nomfun,\r\n    nompap: \"RH Rescisão\",\r\n    tpcola: userAprover.tipcol,\r\n    tpcolb: infoColab.tipcol,\r\n    nmcada: userAprover.numcad,\r\n    nmcadb: infoColab.numcad,\r\n    nmempa: userAprover.numemp,\r\n    nmempb: infoColab.numemp,\r\n    cdcara: userAprover.codcar,\r\n    cdcarb: infoColab.codcar,\r\n    ttreda: userAprover.titred,\r\n    ttredb: infoColab.titred,\r\n    datobs: today,\r\n    desobs: value.descriptionApp,\r\n  }; \r\n\r\n    const response = sendRequest(\r\n    \"POST\",\r\n    \"br.com.cvc.wf.rescisao\",\r\n    \"SetHistoricoObs\",\r\n    paramNameEmp\r\n  ); \r\n  //console.log(paramNameEmp);\r\n  //console.log(userAprover);\r\n  //console.log(infoColab);\r\n}; */\r\n\r\nfunction ContainerObservation() {\r\n  const [fields, setFields] = useState<FieldData[]>([\r\n    { name: \"approver\", value: \"\" },\r\n  ]);\r\n\r\n  const [dataSource, setDataSource] = useState([\r\n    {\r\n      key: \"\",\r\n      usu: \"\",\r\n      dateTime: \"\",\r\n      role: \"\",\r\n      description: \"\",\r\n    },\r\n  ]);\r\n\r\n  const [count, setCount] = useState(0);\r\n\r\n  const columns = [\r\n    {\r\n      title: \"Nome\",\r\n      dataIndex: \"usu\",\r\n      key: \"key\",\r\n      width: \"20%\",\r\n    },\r\n    {\r\n      title: \"Cargo\",\r\n      dataIndex: \"office\",\r\n      key: \"key\",\r\n      width: \"20%\",\r\n    },\r\n    {\r\n      title: \"Data/Hora\",\r\n      dataIndex: \"dateTime\",\r\n      key: \"key\",\r\n      width: \"20%\",\r\n    },\r\n    {\r\n      title: \"Papel\",\r\n      dataIndex: \"paper\",\r\n      key: \"key\",\r\n      width: \"20%\",\r\n    },\r\n    {\r\n      title: \"Observações\",\r\n      dataIndex: \"description\",\r\n      key: \"key\",\r\n      width: \"20%\",\r\n    },\r\n  ];\r\n\r\n  interface obsItem {\r\n    key: string;\r\n    usu: string;\r\n    dateTime: string;\r\n    role: string;\r\n    description: string;\r\n  }\r\n\r\n  const onFinish = (values: string) => {\r\n    console.log(values);\r\n    console.log(values[\"approver\"]);\r\n    console.log(Object.entries(values));\r\n    const now = new Date();\r\n    console.log(now.toLocaleString(\"en-GB\", { timeZone: \"UTC\" }));\r\n    const newObs: obsItem = {\r\n      key: count.toString(),\r\n      usu: values[\"approver\"],\r\n      dateTime: now.toLocaleString(\"en-GB\", { timeZone: \"UTC\" }),\r\n      role: \"\",\r\n      description: values[\"descriptionApp\"],\r\n    };\r\n\r\n    setCount((prev) => prev + 1);\r\n    setDataSource((prev) => {\r\n      return [newObs, ...prev];\r\n    });\r\n\r\n    console.log(newObs);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <fieldset>\r\n        <legend>Observações</legend>\r\n        <Form\r\n          fields={fields}\r\n          onFieldsChange={(_, allFields) => {}}\r\n          onFinish={onFinish}\r\n        >\r\n          <Row gutter={20}>\r\n            <Col span={20}>\r\n              <Form.Item\r\n                name={\"approver\"}\r\n                label={\"Aprovador\"}\r\n                labelAlign=\"left\"\r\n                labelCol={{ span: 4 }}\r\n                wrapperCol={{ span: 10 }}\r\n              >\r\n                <Input style={{ marginLeft: \"25px\" }} />\r\n              </Form.Item>\r\n            </Col>\r\n            <Col span={4}>\r\n              <Form.Item labelAlign=\"right\">\r\n                <Button block type=\"primary\" htmlType=\"submit\">\r\n                  Gravar\r\n                </Button>\r\n              </Form.Item>\r\n            </Col>\r\n          </Row>\r\n          <Tooltip title=\"Campo opcional para acrescentar observações. Após digitar pressionar tecla 'Gravar'.\">\r\n            <Form.Item\r\n              name={\"descriptionApp\"}\r\n              label={\"Observações\"}\r\n              labelAlign=\"left\"\r\n              labelCol={{ span: 4 }}\r\n            >\r\n              <Input.TextArea showCount maxLength={150} />\r\n            </Form.Item>\r\n          </Tooltip>\r\n          <Form.Item label={\"Histórico\"} labelAlign=\"left\">\r\n            <Table dataSource={dataSource} columns={columns}></Table>\r\n          </Form.Item>\r\n        </Form>\r\n      </fieldset>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ContainerObservation;\r\n","import ContainerIdentify from \"../containers/containersCommonFile/containerIdentify\";\r\nimport ContainerEmployee from \"../containers/containersCommonFile/containeEmployee\";\r\nimport ContainerInfoVacation from \"../containers/containersVacation/containerInfoVacation\";\r\nimport ContainerVacation from \"../containers/containersVacation/containerVacation\";\r\nimport ContainerObservation from \"../containers/containersCommonFile/containerObservation\";\r\nimport { Input, Form, Row, Col, Space, Table, Radio } from \"antd\";\r\nimport moment from \"moment\";\r\nimport { useState } from \"react\";\r\n\r\nexport default function FormPageVacation() {\r\n  const [showRow, setShowRow] = useState({\r\n    show01: true,\r\n    show02: true,\r\n  });\r\n\r\n  const [daysVacation, setDaysVacation] = useState(0);\r\n\r\n  return (\r\n    <>\r\n      <ContainerIdentify />\r\n      <ContainerEmployee />\r\n      <Form.Provider\r\n        onFormFinish={(name, { values, forms }) => {\r\n          console.log(name);\r\n          console.log(values);\r\n          console.log(forms);\r\n          const { formVacation } = forms;\r\n          if (values.tableInfo) {\r\n            for (let i = 0; i < values.tableInfo.part; i++) {\r\n              formVacation.setFields([\r\n                {\r\n                  name: \"dateBeginVacation0\" + (i + 1),\r\n                  value: moment(\r\n                    values.tableInfo.children[i].dateIn,\r\n                    \"DD/MM/YYYY\"\r\n                  ),\r\n                },\r\n                {\r\n                  name: \"daysVacation0\" + (i + 1),\r\n                  value: values.tableInfo.children[i].day,\r\n                },\r\n                {\r\n                  name: \"dateEndVacation0\" + (i + 1),\r\n                  value: values.tableInfo.children[i].dateEnd,\r\n                },\r\n              ]);\r\n            }\r\n          }\r\n          /* formVacation.setFieldsValue({\r\n            dateBeginVacation01: moment(\r\n              values.tableInfo.children[0].dateIn,\r\n              \"DD/MM/YYYY\"\r\n            ),\r\n            daysVacation01: values.tableInfo.children[0].day,\r\n            dateEndVacation01: values.tableInfo.children[0].dateEnd,\r\n            dateBeginVacation02: moment(\r\n              values.tableInfo.children[1].dateIn,\r\n              \"DD/MM/YYYY\"\r\n            ),\r\n            daysVacation02: values.tableInfo.children[1].day,\r\n            dateEndVacation02: values.tableInfo.children[1].dateEnd,\r\n          }); */\r\n\r\n          formVacation.setFields([\r\n            {\r\n              name: \"dateBeginVacation01\",\r\n              value: moment(values.tableInfo.children[0].dateIn, \"DD/MM/YYYY\"),\r\n            },\r\n            { name: \"daysVacation01\", value: values.tableInfo.children[0].day },\r\n            {\r\n              name: \"dateEndVacation01\",\r\n              value: values.tableInfo.children[0].dateEnd,\r\n            },\r\n            {\r\n              name: \"dateBeginVacation02\",\r\n              value: moment(values.tableInfo.children[1].dateIn, \"DD/MM/YYYY\"),\r\n            },\r\n            { name: \"daysVacation02\", value: values.tableInfo.children[1].day },\r\n            {\r\n              name: \"dateEndVacation02\",\r\n              value: values.tableInfo.children[1].dateEnd,\r\n            },\r\n            {\r\n              name: \"dateBeginVacation03\",\r\n              value: moment(values.tableInfo.children[2].dateIn, \"DD/MM/YYYY\"),\r\n            },\r\n            { name: \"daysVacation03\", value: values.tableInfo.children[2].day },\r\n            {\r\n              name: \"dateEndVacation03\",\r\n              value: values.tableInfo.children[2].dateEnd,\r\n            },\r\n            { name: \"vacationDays\", value: values.tableInfo.day },\r\n          ]);\r\n          if (values.tableInfo.part === \"2\") {\r\n            setShowRow({\r\n              show01: false,\r\n              show02: true,\r\n            });\r\n          } else if (values.tableInfo.part === \"3\") {\r\n            setShowRow({\r\n              show01: false,\r\n              show02: false,\r\n            });\r\n          }\r\n        }}\r\n      >\r\n        <ContainerInfoVacation />\r\n        <ContainerVacation ena={showRow} set={setShowRow} />\r\n      </Form.Provider>\r\n      <ContainerObservation />\r\n    </>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\nimport ContainerIdentify from \"./containers/containersCommonFile/containerIdentify\";\nimport ContainerEmployee from \"./containers/containersCommonFile/containeEmployee\";\nimport \"./App.css\";\nimport ContainerRecission from \"./containers/containersRescission/containerRecission\";\nimport ContainerObservation from \"./containers/containersCommonFile/containerObservation\";\nimport ContainerMovimentHistory from \"./containers/containersMoviment/containerMovimentHistory\";\nimport ContainerSalaryMoviment from \"./containers/containersMoviment/containerSalaryMoviment\";\nimport ContainerStructuralMoviment from \"./containers/containersMoviment/containerStructuralMoviment\";\nimport ContainerInfoVacation from \"./containers/containersVacation/containerInfoVacation\";\nimport ContainerVacation from \"./containers/containersVacation/containerVacation\";\nimport ContainerStability from \"./containers/containersRescission/containerStability\";\nimport FormPageMovimentation from \"./layoutPage/FormPageMovimentation\";\nimport FormPageRescission from \"./layoutPage/FormPageRescission\";\nimport FormPageVacation from \"./layoutPage/FormPageVacation\";\nimport ContainerMoviment from \"./containers/containersMoviment/containerMoviment\";\nimport LayoutPage from \"./layoutPage/LayoutPage\";\nimport Teste from \"./containers/teste\";\nimport RoutePages from \"./controlers/routes/routes\";\n\nimport Demo from \"./layoutPage/LayoutPage\";\nimport { Layout, Tabs, Input, Form } from \"antd\";\n\n//const { Header, Footer, Content } = Layout;\n\n//const { TabPane } = Tabs;\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <FormPageVacation />\n    </div>\n  );\n}\n\n/* const carro = [\"Painel 01\", \"Painel 02\", \"Painel 03\", \"Painel 04\"];\n\nfunction App() {\n  return (\n    <Tabs tabPosition=\"top\" defaultActiveKey=\"2\">\n      <TabPane tab=\"Tab 1\" key=\"1\">\n        <FormPageMovimentation />\n      </TabPane>\n      <TabPane tab=\"Tab 2\" key=\"2\">\n        <FormPageMovimentation />\n      </TabPane>\n      <TabPane tab=\"Tab 3\" key=\"3\">\n        <ContainerObservation />\n      </TabPane>\n    </Tabs>\n  );\n} */\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n//import \"./index.css\";\nimport App from \"./App\";\n//import LayoutPage from \"./layoutPage/LayoutPage\"; /*\n//import axios from \"axios\";\n/* Inicialmente tem que ser importado o pacote antd.css */\n//import \"antd/dist/antd.css\";\n/* Método para configuração do ant design */\n//import { ConfigProvider } from \"antd\";\n/* Configuração do idioma para portugues Brasil */\n//import ptBR from \"antd/lib/locale/pt_BR\";\n//import { TstArray } from \"./controlers/services/testes\";\n/* import {\n  requestCauseDismissal,\n  SendRequestWebService,\n} from \"./controlers/services/userRequest\"; */\n\n/* const url = \"http://localhost:8080/SXI/GenericConsult?consult=causa_demissao\";\nconst url2 =\n  \"http://localhost:8080/SXI/G5Rest?server=http://localhost:8080&module=rubi&service=br.com.cvc.wf.rescisao&port=GetCausaRecisao&DATASOURCEATTRNAME=CausaDemissao&DEBUG=true\";\n\nconst url3 =\n  \"http://localhost:8080/SXI/G5Rest?server=http://localhost:8080/&module=rubi&service=Altera.Feriado&port=TesteWeb\";\nconst url4 =\n  \"http://localhost:8080/SXI/G5Rest?server=http://localhost:8080/&module=rubi&service=com.senior.g5.rh.fp.consultarColaborador&port=ConsultarColaborador&DEBUG=true\";\n\nconst username = \"senior\";\nconst password = \"senior\"; */\n\n/* const config = {\n  withCredentials: true,\n  method: \"post\",\n  headers: {\n    Origin: \"*\",\n    \"Content-Type\": \"application/json;charset=utf-8\",\n    Authorization: \"Basic \" + window.btoa(username + \":\" + password),\n    user: \"senior\",\n  },\n  auth: {\n    username: \"senior\",\n    password: \"senior\",\n  },\n  responseEncoding: \"utf8\",\n  params: {},\n}; */\n\n/* let headers = new Headers();\n\nheaders.append(\"Accept\", \"application/json;charset=utf-8\");\nheaders.append(\n  \"Authorization\",\n  \"Basic \" + window.btoa(username + \":\" + password)\n);\nheaders.append(\"user\", \"senior\");\n\n\n/* fetch(url2, {\n  mode: \"cors\",\n  method: \"post\",\n  /* headers: {\n    Accept: \"application/json;charset=utf-8\",\n    Authorization: \"Basic \" + window.btoa(username + \":\" + password),\n    user: \"senior\",\n  }, \n  headers: headers,\n}).then((res) => {\n  return res.json().then((jso) => {\n    console.log(jso.causaDemissao);\n  });\n}); */\n\n/* fetch(url3, {\n  mode: \"cors\",\n  method: \"post\", */\n/* headers: {\n    Accept: \"application/json;charset=utf-8\",\n    Authorization: \"Basic \" + window.btoa(username + \":\" + password),\n    user: \"senior\",\n  }, */\n/* headers: headers,\n  body: JSON.stringify({\n    tipoMens: \"Dia\",\n  }),\n}).then((res) => {\n  return res.json().then((json) => {\n    console.log(json.mensagem);\n  });\n}); */\n\n/* axios\n  .post(url2, {\n    crossorigin: true,\n    headers: {\n      common: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n        WithCredentials: true,\n        \"Access-Control-Allow-Origin\": \"*\",\n        user: \"senior\",\n        Authorization: \"Basic \" + window.btoa(username + \":\" + password),\n      },\n      Origin: \"*\",\n      \"Content-Type\": \"application/json;charset=utf-8\",\n      Authorization: \"Basic \" + window.btoa(username + \":\" + password),\n      user: \"senior\",\n    },\n    //user: \"senior\",\n  })\n  .then((res) => {\n    console.log(res);\n  });\n\n  \n \n\naxios.defaults.headers.post[\"user\"] = \"senior\"; */\n\n/* const array = SendRequestWebService();\nvar array2 = [\"\"];\n\nconsole.log(array);\narray.then((cause: any) => {\n  \n  for (var val in cause) {\n    console.log(cause[val].desDem);\n    \n    array2.push(cause[val].desDem);\n  }\n  \n});\nconsole.log(array2); */\n\n/* const xhttp = new XMLHttpRequest();\nconst param = {\n  tipoMens: \"Dia\",\n};\n\nxhttp.open(\"POST\", url3, false);\nxhttp.setRequestHeader(\n  \"Authorization\",\n  \"Basic \" + window.btoa(username + \":\" + password)\n);\nxhttp.setRequestHeader(\"Accept\", \"application/json;charset=utf-8\");\nxhttp.setRequestHeader(\"user\", \"senior\");\n\nxhttp.send(JSON.stringify(param));\nlet responseArray = JSON.parse(xhttp.responseText);\n\nconsole.log(responseArray.mensagem); */\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}